{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compd.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Group } from '@vx/group';\nimport { Circle } from '@vx/shape';\nimport { LinearGradient } from '@vx/gradient';\nimport { scaleLinear } from '@vx/scale';\nimport { useTooltip, Tooltip } from '@vx/tooltip';\n\nconst Compd = () => {\n  const [data, setData] = useState([]);\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip();\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace(/\"/g, '').split('\\n'),\n          headers = lines[0].replace(/\"/g, '').split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            curLine = lines[i].split(',');\n        if (parseInt(curLine[0]) === 99999 || !parseInt(curLine[0])) continue;\n\n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase().replace('.', '_')] = curLine[j] || 0;\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n  let tooltipTimeout;\n\n  const total = d => d.total,\n        x = d => d.modzcta,\n        y = d => d.positive;\n\n  const width = 650,\n        height = 400,\n        xMax = width - 40,\n        yMax = height - 40;\n  const xScale = scaleLinear({\n    domain: [Math.min(...data.map(x)), Math.max(...data.map(x))],\n    range: [0 + 40, xMax],\n    padding: 0.4,\n    clamp: true\n  });\n  const yScale = scaleLinear({\n    domain: [Math.min(...data.map(y)), Math.max(...data.map(y))],\n    range: [yMax, 0],\n    clamp: true\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svgWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LinearGradient, {\n    from: \"#fbc2eb\",\n    to: \"#ede1ed\",\n    id: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: \"url('#gradient')\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Group, {\n    top: 40,\n    onTouchStart: event => {\n      if (tooltipTimeout) clearTimeout(tooltipTimeout);\n      hideTooltip();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, data.map((d, i) => {\n    const cx = xScale(x(d));\n    const cy = yScale(y(d));\n    const r = total(d) / 250 * .75;\n    return /*#__PURE__*/React.createElement(Circle, {\n      className: \"dot\",\n      cx: cx,\n      cy: cy,\n      r: r,\n      fill: \"#ffffff\",\n      stroke: \"#736ca3\",\n      strokeWidth: 2,\n      onMouseEnter: () => {\n        if (tooltipTimeout) clearTimeout(tooltipTimeout);\n        showTooltip({\n          tooltipLeft: cx + window.screen.width / 6.25,\n          tooltipTop: cy + window.screen.height / 3.25,\n          tooltipData: d\n        });\n      },\n      onMouseLeave: () => {\n        tooltipTimeout = setTimeout(() => {\n          hideTooltip();\n        }, 200);\n      },\n      onTouchStart: () => {\n        if (tooltipTimeout) clearTimeout(tooltipTimeout);\n        showTooltip({\n          tooltipLeft: cx,\n          tooltipTop: cy,\n          tooltipData: d\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    });\n  }))), tooltipOpen && /*#__PURE__*/React.createElement(Tooltip, {\n    left: tooltipLeft,\n    top: tooltipTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ttStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Zip\"), \" \", x(tooltipData), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Total\"), \" \", Number(total(tooltipData)).toLocaleString(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 83\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Positive\"), \" \", Number(y(tooltipData)).toLocaleString()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"descriptionHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Zip Code Breakdown\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Includes the cumulative count of New York City residents by ZIP code of residence who were ever tested for COVID-19 (SARS-CoV-2) and tested positive.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 162\n    }\n  }), \"The cumulative counts are as of the date of extraction from the NYC Health Department's disease surveillance database.\"))));\n};\n\nexport default Compd;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compd.js"],"names":["React","useState","useEffect","axios","Group","Circle","LinearGradient","scaleLinear","useTooltip","Tooltip","Compd","data","setData","tooltipData","tooltipLeft","tooltipTop","tooltipOpen","showTooltip","hideTooltip","a","get","res","dump","lines","replace","split","headers","i","length","obj","curLine","parseInt","j","toLowerCase","push","tooltipTimeout","total","d","x","modzcta","y","positive","width","height","xMax","yMax","xScale","domain","Math","min","map","max","range","padding","clamp","yScale","event","clearTimeout","cx","cy","r","window","screen","setTimeout","Number","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Group } from '@vx/group'\nimport { Circle } from '@vx/shape'\nimport { LinearGradient } from '@vx/gradient'\nimport { scaleLinear } from '@vx/scale'\nimport { useTooltip, Tooltip } from '@vx/tooltip'\n\nconst Compd = () => {\n  const [data, setData] = useState([])\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip()\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace(/\"/g, '').split('\\n'),\n        headers = lines[0].replace(/\"/g, '').split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          curLine = lines[i].split(',')\n\n        if (parseInt(curLine[0]) === 99999 || !parseInt(curLine[0])) continue\n        \n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase().replace('.', '_')] = curLine[j] || 0\n        }\n\n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n\n  let tooltipTimeout\n\n  const \n    total = d => d.total,\n    x = d => d.modzcta,\n    y = d => d.positive\n\n  const\n    width = 650,\n    height = 400,\n    xMax = width - 40,\n    yMax = height - 40\n\n  const xScale = scaleLinear({\n    domain: [Math.min(...data.map(x)), Math.max(...data.map(x))],\n    range: [0 + 40, xMax],\n    padding: 0.4,\n    clamp: true\n  })\n\n  const yScale = scaleLinear({\n    domain: [Math.min(...data.map(y)), Math.max(...data.map(y))],\n    range: [yMax, 0],\n    clamp: true\n  })\n\n  return (\n    <>\n      <div className=\"svgWrapper\">\n        <svg width={width} height={height}>\n          <LinearGradient \n              from=\"#fbc2eb\" \n              to=\"#ede1ed\" \n              id=\"gradient\"/>\n          <rect width={width} height={height} fill=\"url('#gradient')\" rx={14} />\n          <Group top={40}\n            onTouchStart={event => {\n              if (tooltipTimeout) clearTimeout(tooltipTimeout)\n              hideTooltip()\n            }}\n          >\n            {data.map((d, i) => {\n              const cx = xScale(x(d))\n              const cy = yScale(y(d))\n              const r = (total(d) / 250) * .75\n              return (\n                <Circle\n                  className=\"dot\"\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                  fill=\"#ffffff\"\n                  stroke=\"#736ca3\"\n                  strokeWidth={2}\n                  onMouseEnter={() => {\n                    if (tooltipTimeout) clearTimeout(tooltipTimeout)\n                    showTooltip({\n                      tooltipLeft: cx + ((window.screen.width) / 6.25) ,\n                      tooltipTop: cy + ((window.screen.height) / 3.25),\n                      tooltipData: d\n                    })\n                  }}\n                  onMouseLeave={() => {\n                    tooltipTimeout = setTimeout(() => {\n                      hideTooltip()\n                    }, 200)\n                  }}\n                  onTouchStart={() => {\n                    if (tooltipTimeout) clearTimeout(tooltipTimeout)\n                    showTooltip({\n                      tooltipLeft: cx,\n                      tooltipTop: cy,\n                      tooltipData: d\n                    })\n                  }}\n                />\n              )\n            })}\n          </Group>\n        </svg>\n        {tooltipOpen && (\n          <Tooltip left={tooltipLeft} top={tooltipTop}>\n            <div className=\"ttStyle\">\n              <strong>Zip</strong> {x(tooltipData)}<br />\n              <strong>Total</strong> {Number(total(tooltipData)).toLocaleString()}<br />\n              <strong>Positive</strong> {Number(y(tooltipData)).toLocaleString()}\n            </div>\n          </Tooltip>\n        )}\n      </div>\n      <div className=\"descDiv\">\n        <div className=\"headerWrap\">\n          <span className=\"descriptionHeader\">Zip Code Breakdown</span>\n        </div>\n        <div className=\"descWrap\">\n          <span className=\"description\">\n            Includes the cumulative count of New York City residents by ZIP code of residence who were ever tested for COVID-19 (SARS-CoV-2) and tested positive.< br />\n            \n            The cumulative counts are as of the date of extraction from the NYC Health Department's disease surveillance database.\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Compd\n"]},"metadata":{},"sourceType":"module"}