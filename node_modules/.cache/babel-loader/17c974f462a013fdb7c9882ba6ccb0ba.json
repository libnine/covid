{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from '@vx/shape';\nimport { Group } from '@vx/group';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { GradientSteelPurple } from '@vx/gradient';\nimport { scaleBand, scaleLinear } from '@vx/scale';\n\nfunction Compc() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/by-age.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.split('\\r'),\n          headers = lines[0].split(',');\n      console.log(lines);\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n\n        if (curLine[0].match(/Citywide\\s\\S+/gi)) {\n          continue;\n        }\n\n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j].replace(/[\\sA-Za-z]/gi, '');\n        }\n\n        dump.push(obj);\n        console.log(dump);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n\n  const x = d => d.borough_group,\n        y = d => d.covid_case_count,\n        height = window.innerHeight / 2,\n        width = window.innerWidth / 2,\n        xMax = width,\n        yMax = height - 100;\n\n  const xScale = scaleBand({\n    rangeRound: [0, xMax],\n    domain: data.map(x),\n    padding: 0.4\n  });\n  const yScale = scaleLinear({\n    rangeRound: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default Compc;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compc.js"],"names":["React","useEffect","useState","axios","Bar","Group","AxisBottom","AxisLeft","GradientSteelPurple","scaleBand","scaleLinear","Compc","data","setData","a","get","res","dump","lines","split","headers","console","log","i","length","obj","line","replace","curLine","match","j","toLowerCase","push","x","d","borough_group","y","covid_case_count","height","window","innerHeight","width","innerWidth","xMax","yMax","xScale","rangeRound","domain","map","padding","yScale","Math","max"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Bar } from '@vx/shape'\nimport { Group } from '@vx/group'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { GradientSteelPurple } from '@vx/gradient'\nimport { scaleBand, scaleLinear } from '@vx/scale'\n\nfunction Compc() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/by-age.csv')\n      let res = await a.data\n\n      let \n        dump = [],\n        lines = res.split('\\r'),\n        headers = lines[0].split(',')\n\n        console.log(lines)\n    \n      for (let i = 1; i < lines.length; i++) {\n        let \n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n\n        if (curLine[0].match(/Citywide\\s\\S+/gi)) { continue }\n    \n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j].replace(/[\\sA-Za-z]/gi, '')\n        }\n    \n        dump.push(obj)\n        console.log(dump)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n\n  const \n    x = d => d.borough_group,\n    y = d => d.covid_case_count,\n    height = window.innerHeight / 2,\n    width = window.innerWidth / 2,\n    xMax = width,\n    yMax = height - 100\n\n  const xScale = scaleBand({\n    rangeRound: [0, xMax],\n    domain: data.map(x),\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    rangeRound: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))]\n  })\n\n  return (\n    <>\n      \n    </>\n  )\n}\n\nexport default Compc\n"]},"metadata":{},"sourceType":"module"}