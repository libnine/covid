{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from '@vx/shape';\nimport { Group } from '@vx/group';\nimport { GradientTealBlue } from '@vx/gradient';\nimport { letterFrequency } from '@vx/mock-data';\nimport { scaleBand, scaleLinear } from '@vx/scale';\n\nfunction Compb() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    console.log(letterFrequency)(async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv');\n      let res = await a.data;\n      console.log(res); // let data = Object.keys(res).map((key) => {\n      //   return {\n      //     date: key,\n      //     close: res[key]\n      //   }\n      // })\n\n      setData(data);\n    })();\n  }, []);\n  const width = 750;\n  const height = 400;\n\n  const x = d => new Date(d.date);\n\n  const y = d => d.close;\n\n  const margin = {\n    top: 60,\n    bottom: 60,\n    left: 80,\n    right: 80\n  };\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n  const xScale = scaleTime({\n    range: [0, xMax],\n    domain: extent(data, x)\n  });\n  const yScale = scaleLinear({\n    range: [yMax, 0],\n    domain: [0, max(data, y)]\n  });\n  return null // <>\n  //   <svg width={width} height={height}>\n  //     <GradientTealBlue id=\"teal\" />\n  //     <rect width={width} height={height} fill={\"url(#teal)\"} rx={14} />\n  //     <Group top={40}>\n  //       {data.map((d, i) => {\n  //         const letter = x(d);\n  //         const barWidth = xScale.bandwidth();\n  //         const barHeight = yMax - yScale(y(d));\n  //         const barX = xScale(letter);\n  //         const barY = yMax - barHeight;\n  //         return (\n  //           <Bar\n  //             key={`bar-${letter}`}\n  //             x={barX}\n  //             y={barY}\n  //             width={barWidth}\n  //             height={barHeight}\n  //             fill=\"rgba(23, 233, 217, .5)\"\n  //             onClick={event => {\n  //               alert(`clicked: ${JSON.stringify(Object.values(d))}`);\n  //             }}\n  //           />\n  //         );\n  //       })}\n  //     </Group>\n  //   </svg>\n  // </>\n  ;\n}\n\nexport default Compb;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compb.js"],"names":["React","useEffect","useState","axios","Bar","Group","GradientTealBlue","letterFrequency","scaleBand","scaleLinear","Compb","data","setData","console","log","a","get","res","width","height","x","d","Date","date","y","close","margin","top","bottom","left","right","xMax","yMax","xScale","scaleTime","range","domain","extent","yScale","max"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,WAAvC;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYP,eAAZ,EACC,YAAW;AACV,UAAIQ,CAAC,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,8EAAV,CAAd;AACA,UAAIC,GAAG,GAAG,MAAMF,CAAC,CAACJ,IAAlB;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EAJU,CAMV;AACA;AACA;AACA;AACA;AACA;;AAEAL,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAfD;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMO,KAAK,GAAG,GAAd;AACA,QAAMC,MAAM,GAAG,GAAf;;AAEA,QAAMC,CAAC,GAAGC,CAAC,IAAI,IAAIC,IAAJ,CAASD,CAAC,CAACE,IAAX,CAAf;;AACA,QAAMC,CAAC,GAAGH,CAAC,IAAIA,CAAC,CAACI,KAAjB;;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAE,EADQ;AAEbC,IAAAA,MAAM,EAAE,EAFK;AAGbC,IAAAA,IAAI,EAAE,EAHO;AAIbC,IAAAA,KAAK,EAAE;AAJM,GAAf;AAOA,QAAMC,IAAI,GAAGb,KAAK,GAAGQ,MAAM,CAACG,IAAf,GAAsBH,MAAM,CAACI,KAA1C;AACA,QAAME,IAAI,GAAGb,MAAM,GAAGO,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACE,MAA1C;AAEA,QAAMK,MAAM,GAAGC,SAAS,CAAC;AACvBC,IAAAA,KAAK,EAAE,CAAC,CAAD,EAAIJ,IAAJ,CADgB;AAEvBK,IAAAA,MAAM,EAAEC,MAAM,CAAC1B,IAAD,EAAOS,CAAP;AAFS,GAAD,CAAxB;AAKA,QAAMkB,MAAM,GAAG7B,WAAW,CAAC;AACzB0B,IAAAA,KAAK,EAAE,CAACH,IAAD,EAAO,CAAP,CADkB;AAEzBI,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAIG,GAAG,CAAC5B,IAAD,EAAOa,CAAP,CAAP;AAFiB,GAAD,CAA1B;AAKA,SACE,IADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BF;AA+BD;;AAED,eAAed,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Bar } from '@vx/shape';\nimport { Group } from '@vx/group';\nimport { GradientTealBlue } from '@vx/gradient';\nimport { letterFrequency } from '@vx/mock-data';\nimport { scaleBand, scaleLinear } from '@vx/scale';\n\nfunction Compb() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    console.log(letterFrequency)\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv')\n      let res = await a.data\n\n      console.log(res)\n  \n      // let data = Object.keys(res).map((key) => {\n      //   return {\n      //     date: key,\n      //     close: res[key]\n      //   }\n      // })\n\n      setData(data)\n    })()\n  }, [])\n  \n  const width = 750\n  const height = 400\n\n  const x = d => new Date(d.date)\n  const y = d => d.close\n\n  const margin = {\n    top: 60,\n    bottom: 60,\n    left: 80,\n    right: 80,\n  }\n\n  const xMax = width - margin.left - margin.right\n  const yMax = height - margin.top - margin.bottom\n\n  const xScale = scaleTime({\n    range: [0, xMax],\n    domain: extent(data, x)\n  })\n\n  const yScale = scaleLinear({\n    range: [yMax, 0],\n    domain: [0, max(data, y)],\n  })\n\n  return (\n    null\n    // <>\n    //   <svg width={width} height={height}>\n    //     <GradientTealBlue id=\"teal\" />\n    //     <rect width={width} height={height} fill={\"url(#teal)\"} rx={14} />\n    //     <Group top={40}>\n    //       {data.map((d, i) => {\n    //         const letter = x(d);\n    //         const barWidth = xScale.bandwidth();\n    //         const barHeight = yMax - yScale(y(d));\n    //         const barX = xScale(letter);\n    //         const barY = yMax - barHeight;\n    //         return (\n    //           <Bar\n    //             key={`bar-${letter}`}\n    //             x={barX}\n    //             y={barY}\n    //             width={barWidth}\n    //             height={barHeight}\n    //             fill=\"rgba(23, 233, 217, .5)\"\n    //             onClick={event => {\n    //               alert(`clicked: ${JSON.stringify(Object.values(d))}`);\n    //             }}\n    //           />\n    //         );\n    //       })}\n    //     </Group>\n    //   </svg>\n    // </>\n  )\n}\n\nexport default Compb\n"]},"metadata":{},"sourceType":"module"}