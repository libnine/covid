{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Compe = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/by-sex.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace(/\"/g, '').split('\\n');\n\n      for (let i = 1; i < lines.length; i++) {}\n\n      setData(lines);\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"nada\");\n};\n\nexport default Compe;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compe.js"],"names":["React","useEffect","useState","axios","Compe","data","setData","a","get","res","dump","lines","replace","split","i","length"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAW;AACV,UAAIM,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,gFAAV,CAAd;AACA,UAAIC,GAAG,GAAG,MAAMF,CAAC,CAACF,IAAlB;AAEA,UACEK,IAAI,GAAG,EADT;AAAA,UAEEC,KAAK,GAAGF,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,EAAsBC,KAAtB,CAA4B,IAA5B,CAFV;;AAIA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC,CAEtC;;AAEDR,MAAAA,OAAO,CAACK,KAAD,CAAP;AACD,KAbD;AAcD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE,iDADF;AAKD,CAzBD;;AA2BA,eAAeP,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nconst Compe = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/by-sex.csv')\n      let res = await a.data\n      \n      let\n        dump = [],\n        lines = res.replace(/\"/g, '').split('\\n')\n\n      for (let i = 1; i < lines.length; i++) {\n\n      }\n\n      setData(lines)\n    })()\n  }, [])\n\n  return (\n    <>\n      nada\n    </>\n  )\n}\n\nexport default Compe\n"]},"metadata":{},"sourceType":"module"}