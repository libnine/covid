{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/states.js\";\nimport React, { useEffect, useState } from 'react';\nimport { axisBottom, axisLeft, extent, max, scaleLinear, scaleTime, timeFormat } from 'd3';\nimport { LinePath } from '@vx/shape';\nimport axios from 'axios';\n\nfunction States() {\n  const [dump, dFunc] = useState(),\n        [xScale, xFunc] = useState(),\n        [yScale, yFunc] = useState(),\n        [xAxis, xaFunc] = useState(),\n        [yAxis, yaFunc] = useState();\n  const width = window.innerWidth / 3,\n        height = window.innerHeight / 2,\n        padding = 100;\n\n  async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json');\n    let res = await a.data[\"bpi\"];\n    return Object.keys(res).map(key => {\n      return {\n        x: key,\n        y: res[key]\n      };\n    });\n  }\n\n  async function scaleFunc(data) {\n    let x = scaleTime({\n      domain: extent(data, d => new Date(d.x)),\n      range: [padding, width - padding]\n    });\n    let y = scaleLinear({\n      domain: [0, max(data, d => d.y) + max(data, d => d.y) / 3],\n      range: [height - padding, 0]\n    });\n    let xAxis = axisBottom(x).tickFormat(timeFormat);\n    let yAxis = axisLeft(y).ticks(data.length);\n    return {\n      x,\n      y,\n      xAxis,\n      yAxis\n    };\n  }\n\n  useEffect(() => {\n    try {\n      dMapped().then(ret => {\n        dFunc(ret);\n        scaleFunc(ret).then((x, y, xa, ya) => {\n          xFunc(x);\n          yFunc(y);\n          xaFunc(xa);\n          yaFunc(ya);\n        });\n      });\n    } catch (e) {\n      throw e;\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#b57edc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: dump,\n    xScale: xScale,\n    yScale: yScale,\n    x: d => new Date(d.x),\n    y: d => d.y,\n    strokeWidth: 5,\n    stroke: \"red\",\n    strokeLinecap: \"round\",\n    fill: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, JSON.stringify(dump)));\n}\n\nexport default States;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/states.js"],"names":["React","useEffect","useState","axisBottom","axisLeft","extent","max","scaleLinear","scaleTime","timeFormat","LinePath","axios","States","dump","dFunc","xScale","xFunc","yScale","yFunc","xAxis","xaFunc","yAxis","yaFunc","width","window","innerWidth","height","innerHeight","padding","dMapped","a","get","res","data","Object","keys","map","key","x","y","scaleFunc","domain","d","Date","range","tickFormat","ticks","length","then","ret","xa","ya","e","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { axisBottom, axisLeft, extent, max, scaleLinear, scaleTime, timeFormat } from 'd3'\nimport { LinePath } from '@vx/shape'\nimport axios from 'axios'\n\nfunction States() {\n  const \n    [dump, dFunc] = useState(),\n    [xScale, xFunc] = useState(),\n    [yScale, yFunc] = useState(),\n    [xAxis, xaFunc] = useState(),\n    [yAxis, yaFunc] = useState()\n\n  const\n    width = window.innerWidth / 3, \n    height = window.innerHeight / 2,\n    padding = 100\n\n  async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json')\n    let res = await a.data[\"bpi\"]\n    return Object.keys(res).map((key) => {\n          return {\n            x: key,\n            y: res[key]\n          }\n      })\n  }\n\n  async function scaleFunc(data) {\n    let x = scaleTime({\n      domain: (extent(data, d => new Date(d.x))),\n      range: [padding, width - padding]\n    })\n\n    let y = scaleLinear({\n      domain: [0, max(data, d => d.y) + (max(data, d => d.y) / 3)],\n      range: [height - padding, 0]\n    })\n\n    let xAxis = axisBottom(x).tickFormat(timeFormat)\n    let yAxis = axisLeft(y).ticks(data.length)\n\n    return { x, y, xAxis, yAxis }\n  }\n\n  useEffect(() => {\n    try {\n      dMapped()\n        .then((ret) => {\n          dFunc(ret)\n          \n          scaleFunc(ret)\n            .then((x, y, xa, ya) => { \n              xFunc(x)\n              yFunc(y)\n              xaFunc(xa)\n              yaFunc(ya)\n            })\n        })\n    }\n    \n    catch(e) { \n      throw(e)\n    }\n  }, [])\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        <rect x={0} y={0} width={width} height={height} fill=\"#b57edc\" />\n        <LinePath\n          data={dump}\n          xScale={xScale}\n          yScale={yScale}\n          x={d => new Date(d.x)}\n          y={d => d.y}\n          strokeWidth={5}\n          stroke=\"red\"\n          strokeLinecap=\"round\"\n          fill=\"transparent\"\n        />\n      </svg>\n    <h1>{JSON.stringify(dump)}</h1>\n    </>\n  )\n}\n\nexport default States\n"]},"metadata":{},"sourceType":"module"}