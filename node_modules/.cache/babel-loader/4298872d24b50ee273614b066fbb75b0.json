{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/states_dep.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { extent, scaleLinear, select } from 'd3';\nimport axios from 'axios';\n\nfunction StatesDep() {\n  const [dump, dFunc] = useState(),\n        ref = useRef(null),\n        g = select(ref.current),\n        w = 600,\n        h = 600,\n        margin = {\n    top: 40,\n    right: 40,\n    bottom: 40,\n    left: 40\n  },\n        height = h - margin.top - margin.bottom,\n        width = w - margin.right - margin.left;\n  useEffect(() => {\n    async function axDump() {\n      try {\n        let res = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json');\n        let maps = Object.keys(res.data[\"bpi\"]).map(key => {\n          return {\n            x: key,\n            y: res.data[\"bpi\"][key]\n          };\n        });\n        return maps;\n      } catch (e) {\n        throw e;\n      }\n    }\n\n    async function init() {\n      let maps = await axDump();\n      dFunc(maps);\n      let x = scaleLinear().domain(extent(maps, d => d.x)).range([0, width]);\n      let y = scaleLinear().domain(extent(maps, d => d.y)).range([height, 0]);\n      return {\n        x,\n        y\n      };\n    }\n\n    init().then(d => {\n      const {\n        xScale,\n        yScale\n      } = d;\n      console.log(xScale, yScale);\n    }); // try { \n    //   const { xScale, yScale } = async () => {\n    //     return await init()\n    //   }\n    //   console.log(xScale, yScale)\n    // } \n    // catch(e) { throw(e) }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, JSON.stringify(dump)));\n}\n\nexport default StatesDep;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/states_dep.js"],"names":["React","useEffect","useRef","useState","extent","scaleLinear","select","axios","StatesDep","dump","dFunc","ref","g","current","w","h","margin","top","right","bottom","left","height","width","axDump","res","get","maps","Object","keys","data","map","key","x","y","e","init","domain","d","range","then","xScale","yScale","console","log","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,MAA9B,QAA4C,IAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QACE,CAACC,IAAD,EAAOC,KAAP,IAAgBP,QAAQ,EAD1B;AAAA,QAEEQ,GAAG,GAAGT,MAAM,CAAC,IAAD,CAFd;AAAA,QAGEU,CAAC,GAAGN,MAAM,CAACK,GAAG,CAACE,OAAL,CAHZ;AAAA,QAIEC,CAAC,GAAG,GAJN;AAAA,QAKEC,CAAC,GAAG,GALN;AAAA,QAMEC,MAAM,GAAG;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,MAAM,EAAE,EAA9B;AAAkCC,IAAAA,IAAI,EAAE;AAAxC,GANX;AAAA,QAOEC,MAAM,GAAGN,CAAC,GAAGC,MAAM,CAACC,GAAX,GAAiBD,MAAM,CAACG,MAPnC;AAAA,QAQEG,KAAK,GAAGR,CAAC,GAAGE,MAAM,CAACE,KAAX,GAAmBF,MAAM,CAACI,IARpC;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAesB,MAAf,GAAwB;AACtB,UAAI;AACF,YAAIC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,uDAAV,CAAhB;AACA,YAAIC,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYJ,GAAG,CAACK,IAAJ,CAAS,KAAT,CAAZ,EAA6BC,GAA7B,CAAkCC,GAAD,IAC1C;AACE,iBAAO;AACLC,YAAAA,CAAC,EAAED,GADE;AAELE,YAAAA,CAAC,EAAET,GAAG,CAACK,IAAJ,CAAS,KAAT,EAAgBE,GAAhB;AAFE,WAAP;AAID,SANQ,CAAX;AAQA,eAAOL,IAAP;AACD,OAXD,CAaA,OAAOQ,CAAP,EAAU;AACR,cAAMA,CAAN;AACD;AACF;;AAED,mBAAeC,IAAf,GAAsB;AACpB,UAAIT,IAAI,GAAG,MAAMH,MAAM,EAAvB;AACAb,MAAAA,KAAK,CAACgB,IAAD,CAAL;AAEA,UAAIM,CAAC,GAAG3B,WAAW,GAChB+B,MADK,CACEhC,MAAM,CAACsB,IAAD,EAAOW,CAAC,IAAIA,CAAC,CAACL,CAAd,CADR,EAELM,KAFK,CAEC,CAAC,CAAD,EAAIhB,KAAJ,CAFD,CAAR;AAIA,UAAIW,CAAC,GAAG5B,WAAW,GAChB+B,MADK,CACEhC,MAAM,CAACsB,IAAD,EAAOW,CAAC,IAAIA,CAAC,CAACJ,CAAd,CADR,EAELK,KAFK,CAEC,CAACjB,MAAD,EAAS,CAAT,CAFD,CAAR;AAIA,aAAO;AAAEW,QAAAA,CAAF;AAAKC,QAAAA;AAAL,OAAP;AACD;;AAEDE,IAAAA,IAAI,GACDI,IADH,CACSF,CAAD,IAAO;AACX,YAAM;AAAEG,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAqBJ,CAA3B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoBC,MAApB;AACD,KAJH,EAnCc,CAyCd;AACA;AACA;AACA;AAEA;AACA;AACA;AAED,GAlDQ,EAkDN,EAlDM,CAAT;AAoDA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAI,CAACC,SAAL,CAAepC,IAAf,CAAL,CALF,CADF;AASD;;AAED,eAAeD,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { extent, scaleLinear, select } from 'd3'\nimport axios from 'axios'\n\nfunction StatesDep() {\n  const \n    [dump, dFunc] = useState(),\n    ref = useRef(null),\n    g = select(ref.current),\n    w = 600, \n    h = 600,\n    margin = { top: 40, right: 40, bottom: 40, left: 40 },\n    height = h - margin.top - margin.bottom,\n    width = w - margin.right - margin.left\n\n  useEffect(() => {\n    async function axDump() {\n      try {\n        let res = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json')\n        let maps = Object.keys(res.data[\"bpi\"]).map((key) => \n          {\n            return {\n              x: key,\n              y: res.data[\"bpi\"][key]\n            }\n          })\n        \n        return maps\n      }\n\n      catch (e) { \n        throw(e) \n      }\n    }\n  \n    async function init() {\n      let maps = await axDump()\n      dFunc(maps)\n\n      let x = scaleLinear()\n        .domain(extent(maps, d => d.x))\n        .range([0, width])\n\n      let y = scaleLinear()\n        .domain(extent(maps, d => d.y))\n        .range([height, 0])\n\n      return { x, y }\n    }\n\n    init()\n      .then((d) => {\n        const { xScale, yScale } = d\n        console.log(xScale, yScale)\n      })\n\n    // try { \n    //   const { xScale, yScale } = async () => {\n    //     return await init()\n    //   }\n\n    //   console.log(xScale, yScale)\n    // } \n    // catch(e) { throw(e) }\n\n  }, [])\n\n  return (\n    <React.Fragment>\n      {/* <svg width={w} height={h}>\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n        </g>\n      </svg> */}\n      <h1>{JSON.stringify(dump)}</h1>\n    </React.Fragment>\n  )\n}\n\nexport default StatesDep\n"]},"metadata":{},"sourceType":"module"}