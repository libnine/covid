{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compd.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Group } from '@vx/group';\nimport { Circle } from '@vx/shape';\nimport { LinearGradient } from '@vx/gradient';\nimport { scaleLinear } from '@vx/scale';\nimport { useTooltip, Tooltip } from '@vx/tooltip';\n\nfunction Compd() {\n  const [data, setData] = useState([]);\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip();\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n\n        if (parseInt(curLine[0]) == 99999 || !parseInt(curLine[0])) {\n          continue;\n        }\n\n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase().replace('.', '_')] = curLine[j] || 0;\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n  let tooltipTimeout;\n\n  const total = d => d.total,\n        x = d => d.modzcta,\n        y = d => d.positive;\n\n  const width = 600,\n        height = 400,\n        xMax = width,\n        yMax = height - 80;\n  const xScale = scaleLinear({\n    domain: [Math.min(...data.map(x)), Math.max(...data.map(x))],\n    range: [0, xMax],\n    clamp: true\n  });\n  const yScale = scaleLinear({\n    domain: [Math.min(...data.map(y)), Math.max(...data.map(y))],\n    range: [yMax, 0],\n    clamp: true\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearGradient, {\n    from: \"#b39cea\",\n    to: \"#e99cea\",\n    id: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: \"#fbc2eb\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Group, {\n    top: 40,\n    onTouchStart: event => {\n      if (tooltipTimeout) clearTimeout(tooltipTimeout);\n      hideTooltip();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, data.map((d, i) => {\n    const cx = xScale(x(d));\n    const cy = yScale(y(d));\n    const r = total(d) / 250 * .75;\n    return /*#__PURE__*/React.createElement(Circle, {\n      className: \"dot\",\n      cx: cx,\n      cy: cy,\n      r: r,\n      fill: \"#ffffff\",\n      onMouseEnter: () => {\n        if (tooltipTimeout) clearTimeout(tooltipTimeout);\n        showTooltip({\n          tooltipLeft: cx,\n          tooltipTop: cy + 20,\n          tooltipData: d\n        });\n      },\n      onMouseLeave: () => {\n        tooltipTimeout = setTimeout(() => {\n          hideTooltip();\n        }, 200);\n      },\n      onTouchStart: () => {\n        if (tooltipTimeout) clearTimeout(tooltipTimeout);\n        showTooltip({\n          tooltipLeft: cx,\n          tooltipTop: cy - 20,\n          tooltipData: d\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    });\n  }))), tooltipOpen && /*#__PURE__*/React.createElement(Tooltip, {\n    left: tooltipLeft,\n    top: tooltipTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Zip\"), \" \", x(tooltipData), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Positive\"), \" \", y(tooltipData), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Total\"), \" \", total(tooltipData))));\n}\n\nexport default Compd;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compd.js"],"names":["React","useState","useEffect","axios","Group","Circle","LinearGradient","scaleLinear","useTooltip","Tooltip","Compd","data","setData","tooltipData","tooltipLeft","tooltipTop","tooltipOpen","showTooltip","hideTooltip","a","get","res","dump","lines","split","headers","i","length","obj","line","replace","curLine","parseInt","j","toLowerCase","push","tooltipTimeout","total","d","x","modzcta","y","positive","width","height","xMax","yMax","xScale","domain","Math","min","map","max","range","clamp","yScale","event","clearTimeout","cx","cy","r","setTimeout"],"mappings":"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","sourcesContent":["  import React, { useState, useEffect } from 'react'\n  import axios from 'axios'\n  import { Group } from '@vx/group'\n  import { Circle } from '@vx/shape'\n  import { LinearGradient } from '@vx/gradient'\n  import { scaleLinear } from '@vx/scale'\n  import { useTooltip, Tooltip } from '@vx/tooltip'\n\nfunction Compd() {\n  const [data, setData] = useState([])\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip()\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.split('\\r'),\n        headers = lines[0].split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n          \n        if (parseInt(curLine[0]) == 99999 || !parseInt(curLine[0])) { continue }\n    \n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase().replace('.', '_')] = curLine[j] || 0\n        }\n\n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n\n  let tooltipTimeout\n\n  const \n    total = d => d.total,\n    x = d => d.modzcta,\n    y = d => d.positive\n\n  const\n    width = 600,\n    height = 400,\n    xMax = width,\n    yMax = height - 80\n\n  const xScale = scaleLinear({\n    domain: [Math.min(...data.map(x)), Math.max(...data.map(x))],\n    range: [0, xMax],\n    clamp: true\n  })\n\n  const yScale = scaleLinear({\n    domain: [Math.min(...data.map(y)), Math.max(...data.map(y))],\n    range: [yMax, 0],\n    clamp: true\n  })\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        <LinearGradient \n            from=\"#b39cea\" \n            to=\"#e99cea\" \n            id=\"gradient\"/>\n        <rect width={width} height={height} fill=\"#fbc2eb\" rx={14} />\n        <Group top={40}\n          onTouchStart={event => {\n            if (tooltipTimeout) clearTimeout(tooltipTimeout)\n            hideTooltip()\n          }}\n        >\n          {data.map((d, i) => {\n            const cx = xScale(x(d))\n            const cy = yScale(y(d))\n            const r = (total(d) / 250) * .75\n            return (\n              <Circle\n                className=\"dot\"\n                cx={cx}\n                cy={cy}\n                r={r}\n                fill=\"#ffffff\"\n                onMouseEnter={() => {\n                  if (tooltipTimeout) clearTimeout(tooltipTimeout)\n                  showTooltip({\n                    tooltipLeft: cx,\n                    tooltipTop: cy + 20,\n                    tooltipData: d\n                  })\n                }}\n                onMouseLeave={() => {\n                  tooltipTimeout = setTimeout(() => {\n                    hideTooltip()\n                  }, 200)\n                }}\n                onTouchStart={() => {\n                  if (tooltipTimeout) clearTimeout(tooltipTimeout)\n                  showTooltip({\n                    tooltipLeft: cx,\n                    tooltipTop: cy - 20,\n                    tooltipData: d\n                  })\n                }}\n              />\n            )\n          })}\n        </Group>\n      </svg>\n      {tooltipOpen && (\n        <Tooltip left={tooltipLeft} top={tooltipTop}>\n          <div className=\"\">\n            <strong>Zip</strong> {x(tooltipData)}\n            <strong>Positive</strong> {y(tooltipData)}\n            <strong>Total</strong> {total(tooltipData)}\n          </div>\n        </Tooltip>\n      )}\n    </>\n  )\n}\n\nexport default Compd\n"]},"metadata":{},"sourceType":"module"}