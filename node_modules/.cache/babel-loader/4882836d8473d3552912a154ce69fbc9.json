{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Line } from '@vx/shape';\nimport { Point } from '@vx/point';\nimport { Group } from '@vx/group';\nimport { Text } from '@vx/text';\nimport center from '../utils/center';\nimport getLabelTransform from '../utils/labelTransform';\nimport ORIENT from '../constants/orientation';\nimport toString from '../utils/toString';\nimport toNumberOrUndefined from '../utils/toNumberOrUndefined';\nexport default function Axis(_ref) {\n  var children = _ref.children,\n      axisClassName = _ref.axisClassName,\n      axisLineClassName = _ref.axisLineClassName,\n      _ref$hideAxisLine = _ref.hideAxisLine,\n      hideAxisLine = _ref$hideAxisLine === void 0 ? false : _ref$hideAxisLine,\n      _ref$hideTicks = _ref.hideTicks,\n      hideTicks = _ref$hideTicks === void 0 ? false : _ref$hideTicks,\n      _ref$hideZero = _ref.hideZero,\n      hideZero = _ref$hideZero === void 0 ? false : _ref$hideZero,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === void 0 ? 14 : _ref$labelOffset,\n      _ref$labelProps = _ref.labelProps,\n      labelProps = _ref$labelProps === void 0 ? {\n    textAnchor: 'middle',\n    fontFamily: 'Arial',\n    fontSize: 10,\n    fill: '#222'\n  } : _ref$labelProps,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? ORIENT.bottom : _ref$orientation,\n      _ref$rangePadding = _ref.rangePadding,\n      rangePadding = _ref$rangePadding === void 0 ? 0 : _ref$rangePadding,\n      scale = _ref.scale,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#222' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      tickClassName = _ref.tickClassName,\n      tickFormat = _ref.tickFormat,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === void 0 ? function () {\n    return (\n      /** tickValue, index */\n      {\n        textAnchor: 'middle',\n        fontFamily: 'Arial',\n        fontSize: 10,\n        fill: '#222'\n      }\n    );\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength,\n      _ref$tickStroke = _ref.tickStroke,\n      tickStroke = _ref$tickStroke === void 0 ? '#222' : _ref$tickStroke,\n      tickTransform = _ref.tickTransform,\n      tickValues = _ref.tickValues,\n      tickComponent = _ref.tickComponent,\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top;\n  var values = tickValues || (scale.ticks ? scale.ticks(numTicks) : scale.domain());\n  var format = tickFormat || (scale.tickFormat ? scale.tickFormat() : toString);\n  var range = scale.range();\n  var range0 = Number(range[0]) + 0.5 - rangePadding;\n  var range1 = Number(range[range.length - 1]) + 0.5 + rangePadding;\n  var isLeft = orientation === ORIENT.left;\n  var isTop = orientation === ORIENT.top;\n  var axisIsHorizontal = isTop || orientation === ORIENT.bottom;\n  var tickSign = isLeft || isTop ? -1 : 1;\n  var position = center(scale.copy());\n  var axisFromPoint = new Point({\n    x: axisIsHorizontal ? range0 : 0,\n    y: axisIsHorizontal ? 0 : range0\n  });\n  var axisToPoint = new Point({\n    x: axisIsHorizontal ? range1 : 0,\n    y: axisIsHorizontal ? 0 : range1\n  });\n  var tickLabelFontSize = 10; // track the max tick label size to compute label offset\n\n  if (children) {\n    return React.createElement(Group, {\n      className: cx('vx-axis', axisClassName),\n      top: top,\n      left: left\n    }, children({\n      axisFromPoint: axisFromPoint,\n      axisToPoint: axisToPoint,\n      horizontal: axisIsHorizontal,\n      tickSign: tickSign,\n      numTicks: numTicks,\n      label: label,\n      rangePadding: rangePadding,\n      tickLength: tickLength,\n      tickFormat: format,\n      tickPosition: position,\n      ticks: values.map(function (value, index) {\n        var scaledValue = toNumberOrUndefined(position(value));\n        var from = new Point({\n          x: axisIsHorizontal ? scaledValue : 0,\n          y: axisIsHorizontal ? 0 : scaledValue\n        });\n        var to = new Point({\n          x: axisIsHorizontal ? scaledValue : tickSign * tickLength,\n          y: axisIsHorizontal ? tickLength * tickSign : scaledValue\n        });\n        return {\n          value: value,\n          index: index,\n          from: from,\n          to: to,\n          formattedValue: format(value, index)\n        };\n      })\n    }));\n  }\n\n  return React.createElement(Group, {\n    className: cx('vx-axis', axisClassName),\n    top: top,\n    left: left\n  }, values.map(function (val, index) {\n    if (hideZero && (typeof val === 'number' && val === 0 || typeof val === 'string' && val === '0')) {\n      return null;\n    }\n\n    var scaledValue = toNumberOrUndefined(position(val));\n    var tickFromPoint = new Point({\n      x: axisIsHorizontal ? scaledValue : 0,\n      y: axisIsHorizontal ? 0 : scaledValue\n    });\n    var tickToPoint = new Point({\n      x: axisIsHorizontal ? scaledValue : tickSign * tickLength,\n      y: axisIsHorizontal ? tickLength * tickSign : scaledValue\n    });\n    var tickLabelPropsObj = tickLabelProps(val, index);\n    tickLabelFontSize = Math.max(tickLabelFontSize, typeof tickLabelPropsObj.fontSize === 'number' && tickLabelPropsObj.fontSize || 0);\n    var tickYCoord = tickToPoint.y + (axisIsHorizontal && !isTop ? tickLabelFontSize : 0);\n    var formattedValue = format(val, index);\n    return React.createElement(Group, {\n      key: \"vx-tick-\" + val + \"-\" + index,\n      className: cx('vx-axis-tick', tickClassName),\n      transform: tickTransform\n    }, !hideTicks && React.createElement(Line, {\n      from: tickFromPoint,\n      to: tickToPoint,\n      stroke: tickStroke,\n      strokeLinecap: \"square\"\n    }), tickComponent ? tickComponent(_extends({}, tickLabelPropsObj, {\n      x: tickToPoint.x,\n      y: tickYCoord,\n      formattedValue: formattedValue\n    })) : React.createElement(Text, _extends({\n      x: tickToPoint.x,\n      y: tickYCoord\n    }, tickLabelPropsObj), formattedValue));\n  }), !hideAxisLine && React.createElement(Line, {\n    className: cx('vx-axis-line', axisLineClassName),\n    from: axisFromPoint,\n    to: axisToPoint,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray\n  }), label && React.createElement(Text, _extends({\n    className: cx('vx-axis-label', labelClassName)\n  }, getLabelTransform({\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    orientation: orientation,\n    range: range,\n    tickLabelFontSize: tickLabelFontSize,\n    tickLength: tickLength\n  }), labelProps), label));\n}","map":{"version":3,"sources":["/Users/qorka/JS/covid/ui/node_modules/@vx/axis/esm/axis/Axis.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","cx","Line","Point","Group","Text","center","getLabelTransform","ORIENT","toString","toNumberOrUndefined","Axis","_ref","children","axisClassName","axisLineClassName","_ref$hideAxisLine","hideAxisLine","_ref$hideTicks","hideTicks","_ref$hideZero","hideZero","_ref$label","label","labelClassName","_ref$labelOffset","labelOffset","_ref$labelProps","labelProps","textAnchor","fontFamily","fontSize","fill","_ref$left","left","_ref$numTicks","numTicks","_ref$orientation","orientation","bottom","_ref$rangePadding","rangePadding","scale","_ref$stroke","stroke","_ref$strokeWidth","strokeWidth","strokeDasharray","tickClassName","tickFormat","_ref$tickLabelProps","tickLabelProps","_ref$tickLength","tickLength","_ref$tickStroke","tickStroke","tickTransform","tickValues","tickComponent","_ref$top","top","values","ticks","domain","format","range","range0","Number","range1","isLeft","isTop","axisIsHorizontal","tickSign","position","copy","axisFromPoint","x","y","axisToPoint","tickLabelFontSize","createElement","className","horizontal","tickPosition","map","value","index","scaledValue","from","to","formattedValue","val","tickFromPoint","tickToPoint","tickLabelPropsObj","Math","max","tickYCoord","transform","strokeLinecap"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { Line } from '@vx/shape';\nimport { Point } from '@vx/point';\nimport { Group } from '@vx/group';\nimport { Text } from '@vx/text';\nimport center from '../utils/center';\nimport getLabelTransform from '../utils/labelTransform';\nimport ORIENT from '../constants/orientation';\nimport toString from '../utils/toString';\nimport toNumberOrUndefined from '../utils/toNumberOrUndefined';\nexport default function Axis(_ref) {\n  var children = _ref.children,\n      axisClassName = _ref.axisClassName,\n      axisLineClassName = _ref.axisLineClassName,\n      _ref$hideAxisLine = _ref.hideAxisLine,\n      hideAxisLine = _ref$hideAxisLine === void 0 ? false : _ref$hideAxisLine,\n      _ref$hideTicks = _ref.hideTicks,\n      hideTicks = _ref$hideTicks === void 0 ? false : _ref$hideTicks,\n      _ref$hideZero = _ref.hideZero,\n      hideZero = _ref$hideZero === void 0 ? false : _ref$hideZero,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      labelClassName = _ref.labelClassName,\n      _ref$labelOffset = _ref.labelOffset,\n      labelOffset = _ref$labelOffset === void 0 ? 14 : _ref$labelOffset,\n      _ref$labelProps = _ref.labelProps,\n      labelProps = _ref$labelProps === void 0 ? {\n    textAnchor: 'middle',\n    fontFamily: 'Arial',\n    fontSize: 10,\n    fill: '#222'\n  } : _ref$labelProps,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? ORIENT.bottom : _ref$orientation,\n      _ref$rangePadding = _ref.rangePadding,\n      rangePadding = _ref$rangePadding === void 0 ? 0 : _ref$rangePadding,\n      scale = _ref.scale,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#222' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      tickClassName = _ref.tickClassName,\n      tickFormat = _ref.tickFormat,\n      _ref$tickLabelProps = _ref.tickLabelProps,\n      tickLabelProps = _ref$tickLabelProps === void 0 ? function () {\n    return (\n      /** tickValue, index */\n      {\n        textAnchor: 'middle',\n        fontFamily: 'Arial',\n        fontSize: 10,\n        fill: '#222'\n      }\n    );\n  } : _ref$tickLabelProps,\n      _ref$tickLength = _ref.tickLength,\n      tickLength = _ref$tickLength === void 0 ? 8 : _ref$tickLength,\n      _ref$tickStroke = _ref.tickStroke,\n      tickStroke = _ref$tickStroke === void 0 ? '#222' : _ref$tickStroke,\n      tickTransform = _ref.tickTransform,\n      tickValues = _ref.tickValues,\n      tickComponent = _ref.tickComponent,\n      _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top;\n  var values = tickValues || (scale.ticks ? scale.ticks(numTicks) : scale.domain());\n  var format = tickFormat || (scale.tickFormat ? scale.tickFormat() : toString);\n  var range = scale.range();\n  var range0 = Number(range[0]) + 0.5 - rangePadding;\n  var range1 = Number(range[range.length - 1]) + 0.5 + rangePadding;\n  var isLeft = orientation === ORIENT.left;\n  var isTop = orientation === ORIENT.top;\n  var axisIsHorizontal = isTop || orientation === ORIENT.bottom;\n  var tickSign = isLeft || isTop ? -1 : 1;\n  var position = center(scale.copy());\n  var axisFromPoint = new Point({\n    x: axisIsHorizontal ? range0 : 0,\n    y: axisIsHorizontal ? 0 : range0\n  });\n  var axisToPoint = new Point({\n    x: axisIsHorizontal ? range1 : 0,\n    y: axisIsHorizontal ? 0 : range1\n  });\n  var tickLabelFontSize = 10; // track the max tick label size to compute label offset\n\n  if (children) {\n    return React.createElement(Group, {\n      className: cx('vx-axis', axisClassName),\n      top: top,\n      left: left\n    }, children({\n      axisFromPoint: axisFromPoint,\n      axisToPoint: axisToPoint,\n      horizontal: axisIsHorizontal,\n      tickSign: tickSign,\n      numTicks: numTicks,\n      label: label,\n      rangePadding: rangePadding,\n      tickLength: tickLength,\n      tickFormat: format,\n      tickPosition: position,\n      ticks: values.map(function (value, index) {\n        var scaledValue = toNumberOrUndefined(position(value));\n        var from = new Point({\n          x: axisIsHorizontal ? scaledValue : 0,\n          y: axisIsHorizontal ? 0 : scaledValue\n        });\n        var to = new Point({\n          x: axisIsHorizontal ? scaledValue : tickSign * tickLength,\n          y: axisIsHorizontal ? tickLength * tickSign : scaledValue\n        });\n        return {\n          value: value,\n          index: index,\n          from: from,\n          to: to,\n          formattedValue: format(value, index)\n        };\n      })\n    }));\n  }\n\n  return React.createElement(Group, {\n    className: cx('vx-axis', axisClassName),\n    top: top,\n    left: left\n  }, values.map(function (val, index) {\n    if (hideZero && (typeof val === 'number' && val === 0 || typeof val === 'string' && val === '0')) {\n      return null;\n    }\n\n    var scaledValue = toNumberOrUndefined(position(val));\n    var tickFromPoint = new Point({\n      x: axisIsHorizontal ? scaledValue : 0,\n      y: axisIsHorizontal ? 0 : scaledValue\n    });\n    var tickToPoint = new Point({\n      x: axisIsHorizontal ? scaledValue : tickSign * tickLength,\n      y: axisIsHorizontal ? tickLength * tickSign : scaledValue\n    });\n    var tickLabelPropsObj = tickLabelProps(val, index);\n    tickLabelFontSize = Math.max(tickLabelFontSize, typeof tickLabelPropsObj.fontSize === 'number' && tickLabelPropsObj.fontSize || 0);\n    var tickYCoord = tickToPoint.y + (axisIsHorizontal && !isTop ? tickLabelFontSize : 0);\n    var formattedValue = format(val, index);\n    return React.createElement(Group, {\n      key: \"vx-tick-\" + val + \"-\" + index,\n      className: cx('vx-axis-tick', tickClassName),\n      transform: tickTransform\n    }, !hideTicks && React.createElement(Line, {\n      from: tickFromPoint,\n      to: tickToPoint,\n      stroke: tickStroke,\n      strokeLinecap: \"square\"\n    }), tickComponent ? tickComponent(_extends({}, tickLabelPropsObj, {\n      x: tickToPoint.x,\n      y: tickYCoord,\n      formattedValue: formattedValue\n    })) : React.createElement(Text, _extends({\n      x: tickToPoint.x,\n      y: tickYCoord\n    }, tickLabelPropsObj), formattedValue));\n  }), !hideAxisLine && React.createElement(Line, {\n    className: cx('vx-axis-line', axisLineClassName),\n    from: axisFromPoint,\n    to: axisToPoint,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray\n  }), label && React.createElement(Text, _extends({\n    className: cx('vx-axis-label', labelClassName)\n  }, getLabelTransform({\n    labelOffset: labelOffset,\n    labelProps: labelProps,\n    orientation: orientation,\n    range: range,\n    tickLabelFontSize: tickLabelFontSize,\n    tickLength: tickLength\n  }), labelProps), label));\n}"]},"metadata":{},"sourceType":"module"}