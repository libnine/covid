{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compa.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../styles/comp.css';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { curveBasis } from '@vx/curve';\nimport { LinearGradient } from '@vx/gradient';\nimport { Group } from '@vx/group';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { localPoint } from \"@vx/event\";\nimport { Line, LinePath } from '@vx/shape';\nimport { useTooltip } from '@vx/tooltip';\nimport { bisector } from 'd3-array';\n\nconst Compa = () => {\n  const [data, setData] = useState([]);\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip();\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n\n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j] || 0;\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n\n  const bisectDate = bisector(x).left,\n        margin = {\n    top: 40,\n    bottom: 40,\n    left: 0,\n    right: 0\n  },\n        width = 650,\n        height = 400,\n        xMax = width - 25,\n        yMax = height - 100,\n        date = d => new Date(d.date),\n        yNew = d => d.new_covid_case_count,\n        yHosp = d => d.hospitalized_case_count,\n        yDc = d => d.death_count,\n        x = d => xScale(date(d)),\n        y1 = d => yScale(yNew(d)),\n        y2 = d => yScale(yHosp(d)),\n        y3 = d => yScale(yDc(d));\n\n  const xScale = scaleTime({\n    domain: [Math.min(...data.map(date)), Math.max(...data.map(date))],\n    range: [0, xMax],\n    padding: 0.4\n  });\n  const yScale = scaleLinear({\n    domain: [0, Math.max(...data.map(yNew))],\n    range: [yMax, 0]\n  });\n\n  const handleTooltip = ({\n    event,\n    data,\n    xSelector,\n    xScale,\n    yScale\n  }) => {\n    const {\n      showTooltip\n    } = this.props;\n    const {\n      x\n    } = localPoint(event);\n    const x0 = xScale.invert(x);\n    const index = bisectDate(data, x0, 1);\n    const d0 = data[index - 1];\n    const d1 = data[index];\n    let d = d0;\n\n    if (d1 && d1.date) {\n      d = x0 - xSelector(d0) > xSelector(d1) - x0 ? d1 : d0;\n    }\n\n    showTooltip({\n      tooltipData: d,\n      tooltipLeft: xScale(x(d)),\n      tooltipTop: yScale(y(d))\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svgWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#fbc2eb\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LinearGradient, {\n    from: \"#b39cea\",\n    to: \"#e99cea\",\n    id: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Group, {\n    top: margin.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y1,\n    stroke: '#ffffff',\n    strokeWidth: 2,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    hideZero: true,\n    data: data,\n    x: x,\n    y: y2,\n    stroke: `url('#gradient')`,\n    strokeWidth: 1,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y3,\n    stroke: '#ff0000',\n    strokeWidth: 1,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AxisBottom, {\n    hideAxisLine: true,\n    hideTicks: true,\n    scale: xScale,\n    top: yMax,\n    stroke: '#ffffff',\n    tickLabelProps: () => ({\n      fill: '#000000',\n      textAnchor: 'middle',\n      fontSize: 16,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#ffffff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AxisLeft, {\n    scale: yScale,\n    stroke: '#ffffff',\n    hideTicks: false,\n    tickLabelProps: () => ({\n      dx: '1.75em',\n      dy: '-0.75em',\n      fill: '#000000',\n      textAnchor: 'start',\n      fontSize: 14,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#ffffff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), tooltipData && /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    from: {\n      x: tooltipLeft,\n      y: 0\n    },\n    to: {\n      x: tooltipLeft,\n      y: yMax\n    },\n    stroke: \"#5C77EB\",\n    strokeWidth: 4,\n    style: {\n      pointerEvents: \"none\"\n    },\n    strokeDasharray: \"4,6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: tooltipLeft,\n    cy: tooltipTop,\n    r: 4,\n    fill: \"#5C77EB\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    style: {\n      pointerEvents: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"descriptionHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Cases, Hospitalizations, Deaths\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Cases are by date of diagnosis\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 43\n    }\n  }), \"Hospitalizations are by date of admission\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 54\n    }\n  }), \"Deaths are by date of death\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 40\n    }\n  })))));\n};\n\nexport default Compa;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compa.js"],"names":["React","useEffect","useState","axios","AxisBottom","AxisLeft","curveBasis","LinearGradient","Group","scaleTime","scaleLinear","localPoint","Line","LinePath","useTooltip","bisector","Compa","data","setData","tooltipData","tooltipLeft","tooltipTop","tooltipOpen","showTooltip","hideTooltip","a","get","res","dump","lines","replace","split","headers","i","length","obj","line","curLine","j","toLowerCase","push","bisectDate","x","left","margin","top","bottom","right","width","height","xMax","yMax","date","d","Date","yNew","new_covid_case_count","yHosp","hospitalized_case_count","yDc","death_count","xScale","y1","yScale","y2","y3","domain","Math","min","map","max","range","padding","handleTooltip","event","xSelector","props","x0","invert","index","d0","d1","y","fill","textAnchor","fontSize","fontFamily","dx","dy","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport '../styles/comp.css'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { curveBasis } from '@vx/curve'\nimport { LinearGradient } from '@vx/gradient'\nimport { Group } from '@vx/group'\nimport { scaleTime, scaleLinear } from '@vx/scale'\nimport { localPoint } from \"@vx/event\";\nimport { Line, LinePath } from '@vx/shape'\nimport { useTooltip } from '@vx/tooltip'\nimport { bisector } from 'd3-array'\n\nconst Compa = () => {\n  const [data, setData] = useState([])\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip()\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n        headers = lines[0].split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n    \n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j] || 0\n        }\n\n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n  \n  const \n    bisectDate = bisector(x).left,\n    margin = {\n      top: 40,\n      bottom: 40,\n      left: 0,\n      right: 0\n    },\n    width = 650,\n    height = 400,\n    xMax = width - 25,\n    yMax = height - 100,\n    date = d => new Date(d.date),\n    yNew = d => d.new_covid_case_count,\n    yHosp = d => d.hospitalized_case_count,\n    yDc = d => d.death_count,\n    x = d => xScale(date(d)),\n    y1 = d => yScale(yNew(d)),\n    y2 = d => yScale(yHosp(d)),\n    y3 = d => yScale(yDc(d))\n\n  const xScale = scaleTime({\n    domain: [Math.min(...data.map(date)), Math.max(...data.map(date))],\n    range: [0, xMax],\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    domain: [0, Math.max(...data.map(yNew))],\n    range: [yMax, 0]\n  })\n\n  const handleTooltip = ({ event, data, xSelector, xScale, yScale }) => {\n    const { showTooltip } = this.props;\n    const { x } = localPoint(event);\n    const x0 = xScale.invert(x);\n    const index = bisectDate(data, x0, 1);\n    const d0 = data[index - 1];\n    const d1 = data[index];\n    let d = d0;\n    if (d1 && d1.date) {\n      d = x0 - xSelector(d0) > xSelector(d1) - x0 ? d1 : d0;\n    }\n    showTooltip({\n      tooltipData: d,\n      tooltipLeft: xScale(x(d)),\n      tooltipTop: yScale(y(d)),\n    })\n  }\n\n  return (\n    <>\n      <div className=\"svgWrapper\">\n        <svg width={width} height={height}> \n          <rect x={0} y={0} width={width} height={height} fill=\"#fbc2eb\" rx={14} />\n          <LinearGradient \n            from=\"#b39cea\" \n            to=\"#e99cea\" \n            id=\"gradient\"/>\n            <Group top={margin.top}>\n              <LinePath\n                data={data}\n                x={x}\n                y={y1}\n                stroke={'#ffffff'}\n                strokeWidth={2}\n                curve={curveBasis}\n              />\n              <LinePath\n                hideZero\n                data={data}\n                x={x}\n                y={y2}\n                stroke={`url('#gradient')`}\n                strokeWidth={1}\n                curve={curveBasis}\n              />\n              <LinePath\n                data={data}\n                x={x}\n                y={y3}\n                stroke={'#ff0000'}\n                strokeWidth={1}\n                curve={curveBasis}\n              />\n              <AxisBottom\n                hideAxisLine\n                hideTicks={true}\n                scale={xScale}\n                top={yMax}\n                stroke={'#ffffff'}\n                tickLabelProps={() => ({\n                  fill: '#000000',\n                  textAnchor: 'middle',\n                  fontSize: 16,\n                  fontFamily: 'Snoopy'\n                })}\n                tickTextFill={'#ffffff'}\n              />\n              <AxisLeft\n                scale={yScale}\n                stroke={'#ffffff'}\n                hideTicks={false}\n                tickLabelProps={() => ({\n                  dx: '1.75em',\n                  dy: '-0.75em',\n                  fill: '#000000',\n                  textAnchor: 'start',\n                  fontSize: 14,\n                  fontFamily: 'Snoopy'\n                })}\n                tickTextFill={'#ffffff'}\n              />\n              {tooltipData && (\n                <g>\n                  <Line\n                    from={{ x: tooltipLeft, y: 0 }}\n                    to={{ x: tooltipLeft, y: yMax }}\n                    stroke=\"#5C77EB\"\n                    strokeWidth={4}\n                    style={{ pointerEvents: \"none\" }}\n                    strokeDasharray=\"4,6\"\n                  />\n                  <circle\n                    cx={tooltipLeft}\n                    cy={tooltipTop}\n                    r={4}\n                    fill=\"#5C77EB\"\n                    stroke=\"white\"\n                    strokeWidth={2}\n                    style={{ pointerEvents: \"none\" }}\n                  />\n                </g>\n              )}\n            </Group>\n        </svg>\n      </div>\n      <div className=\"descDiv\">\n        <div className=\"headerWrap\">\n          <span className=\"descriptionHeader\">Cases, Hospitalizations, Deaths</span>\n        </div>\n        <div className=\"descWrap\">\n          <span className=\"description\">\n            Cases are by date of diagnosis<br />\n            Hospitalizations are by date of admission<br/>\n            Deaths are by date of death<br />\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Compa\n"]},"metadata":{},"sourceType":"module"}