{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compa.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { curveBasis } from '@vx/curve';\nimport { LinearGradient } from '@vx/gradient';\nimport { Group } from '@vx/group';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { LinePath } from '@vx/shape';\n\nfunction Compa() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n\n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j] || 0;\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n\n  const margin = {\n    top: 40,\n    bottom: 40,\n    left: 0,\n    right: 0\n  },\n        height = 400,\n        width = 600,\n        date = d => new Date(d.date),\n        yNew = d => d.new_covid_case_count,\n        yHosp = d => d.hospitalized_case_count,\n        yDc = d => d.death_count,\n        xMax = width,\n        yMax = height - 100;\n\n  const xScale = scaleTime({\n    domain: [Math.min(...data.map(date)), Math.max(...data.map(date))],\n    range: [0, xMax],\n    padding: 0.4\n  });\n  const yScale = scaleLinear({\n    domain: [0, Math.max(...data.map(yNew))],\n    range: [yMax, 0]\n  });\n\n  const x = d => xScale(date(d)),\n        y1 = d => yScale(yNew(d)),\n        y2 = d => yScale(yHosp(d)),\n        y3 = d => yScale(yDc(d));\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#fbc2eb\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LinearGradient, {\n    from: \"#b39cea\",\n    to: \"#e99cea\",\n    id: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Group, {\n    top: margin.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y1,\n    stroke: '#ffffff',\n    strokeWidth: 3,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y2,\n    stroke: `url('#gradient')`,\n    strokeWidth: 2,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y3,\n    stroke: '#000000',\n    strokeWidth: 2,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AxisBottom, {\n    hideTicks: true,\n    scale: xScale,\n    top: yMax,\n    stroke: '#ffffff',\n    tickLabelProps: () => ({\n      fill: '#000000',\n      textAnchor: 'middle',\n      fontSize: 18,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#ffffff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AxisLeft, {\n    scale: yScale,\n    stroke: '#ffffff',\n    hideTicks: false,\n    hideZero: true,\n    tickLabelProps: () => ({\n      dx: '2.5em',\n      fill: '#000000',\n      textAnchor: 'middle',\n      fontSize: 14,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#ffffff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default Compa;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compa.js"],"names":["React","useEffect","useState","axios","AxisBottom","AxisLeft","curveBasis","LinearGradient","Group","scaleTime","scaleLinear","LinePath","Compa","data","setData","a","get","res","dump","lines","replace","split","headers","i","length","obj","line","curLine","j","toLowerCase","push","margin","top","bottom","left","right","height","width","date","d","Date","yNew","new_covid_case_count","yHosp","hospitalized_case_count","yDc","death_count","xMax","yMax","xScale","domain","Math","min","map","max","range","padding","yScale","x","y1","y2","y3","fill","textAnchor","fontSize","fontFamily","dx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { curveBasis } from '@vx/curve'\nimport { LinearGradient } from '@vx/gradient'\nimport { Group } from '@vx/group'\nimport { scaleTime, scaleLinear } from '@vx/scale'\nimport { LinePath } from '@vx/shape'\n\n\nfunction Compa() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n        headers = lines[0].split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n    \n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j] || 0\n        }\n\n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n  \n  const \n    margin = {\n      top: 40,\n      bottom: 40,\n      left: 0,\n      right: 0\n    },\n    height = 400,\n    width = 600,\n    date = d => new Date(d.date),\n    yNew = d => d.new_covid_case_count,\n    yHosp = d => d.hospitalized_case_count,\n    yDc = d => d.death_count,\n    xMax = width,\n    yMax = height - 100\n\n  const xScale = scaleTime({\n    domain: [Math.min(...data.map(date)), Math.max(...data.map(date))],\n    range: [0, xMax],\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    domain: [0, Math.max(...data.map(yNew))],\n    range: [yMax, 0]\n  })\n\n  const\n    x = d => xScale(date(d)),\n    y1 = d => yScale(yNew(d)),\n    y2 = d => yScale(yHosp(d)),\n    y3 = d => yScale(yDc(d))\n\n  return (\n    <>\n      <svg width={width} height={height}> \n        <rect x={0} y={0} width={width} height={height} fill=\"#fbc2eb\" rx={14} />\n        <LinearGradient \n          from=\"#b39cea\" \n          to=\"#e99cea\" \n          id=\"gradient\"/>\n          <Group top={margin.top}>\n            <LinePath\n              data={data}\n              x={x}\n              y={y1}\n              stroke={'#ffffff'}\n              strokeWidth={3}\n              curve={curveBasis}\n            />\n            <LinePath\n              data={data}\n              x={x}\n              y={y2}\n              stroke={`url('#gradient')`}\n              strokeWidth={2}\n              curve={curveBasis}\n            />\n            <LinePath\n              data={data}\n              x={x}\n              y={y3}\n              stroke={'#000000'}\n              strokeWidth={2}\n              curve={curveBasis}\n            />\n            <AxisBottom\n              hideTicks={true}\n              scale={xScale}\n              top={yMax}\n              stroke={'#ffffff'}\n              tickLabelProps={() => ({\n                fill: '#000000',\n                textAnchor: 'middle',\n                fontSize: 18,\n                fontFamily: 'Snoopy'\n              })}\n              tickTextFill={'#ffffff'}\n            />\n            <AxisLeft\n              scale={yScale}\n              stroke={'#ffffff'}\n              hideTicks={false}\n              hideZero\n              tickLabelProps={() => ({\n                dx: '2.5em',\n                fill: '#000000',\n                textAnchor: 'middle',\n                fontSize: 14,\n                fontFamily: 'Snoopy'\n              })}\n              tickTextFill={'#ffffff'}\n            />\n          </Group>\n      </svg>\n    </>\n  )\n}\n\nexport default Compa\n"]},"metadata":{},"sourceType":"module"}