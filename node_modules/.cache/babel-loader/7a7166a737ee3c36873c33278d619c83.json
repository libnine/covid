{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compa.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../styles/comp.css';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { curveBasis } from '@vx/curve';\nimport { LinearGradient } from '@vx/gradient';\nimport { Group } from '@vx/group';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { LinePath } from '@vx/shape';\nimport { useTooltip, Tooltip } from '@vx/tooltip';\n\nfunction Compa() {\n  const [data, setData] = useState([]);\n  const {\n    tooltipData,\n    handleTooltip,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip();\n  let tooltipTimeout;\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n\n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j] || 0;\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n\n  const margin = {\n    top: 40,\n    bottom: 40,\n    left: 0,\n    right: 0\n  },\n        width = 650,\n        height = 400,\n        xMax = width - 25,\n        yMax = height - 100,\n        date = d => new Date(d.date),\n        yNew = d => d.new_covid_case_count,\n        yHosp = d => d.hospitalized_case_count,\n        yDc = d => d.death_count,\n        x = d => xScale(date(d)),\n        y1 = d => yScale(yNew(d)),\n        y2 = d => yScale(yHosp(d)),\n        y3 = d => yScale(yDc(d));\n\n  const xScale = scaleTime({\n    domain: [Math.min(...data.map(date)), Math.max(...data.map(date))],\n    range: [0, xMax],\n    padding: 0.4\n  });\n  const yScale = scaleLinear({\n    domain: [0, Math.max(...data.map(yNew))],\n    range: [yMax, 0]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svgWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#fbc2eb\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LinearGradient, {\n    from: \"#b39cea\",\n    to: \"#e99cea\",\n    id: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Group, {\n    top: margin.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y1,\n    stroke: '#ffffff',\n    strokeWidth: 2,\n    curve: curveBasis,\n    onTouchStart: event => showTooltip({\n      event,\n      x,\n      xScale,\n      yScale,\n      data: data\n    }),\n    onTouchMove: event => showTooltip({\n      event,\n      x,\n      xScale,\n      yScale,\n      data: data\n    }),\n    onMouseMove: event => showTooltip({\n      event,\n      x,\n      xScale,\n      yScale,\n      data: data\n    }),\n    onMouseLeave: event => hideTooltip(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y2,\n    stroke: `url('#gradient')`,\n    strokeWidth: 1,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: data,\n    x: x,\n    y: y3,\n    stroke: '#ff0000',\n    strokeWidth: 1,\n    curve: curveBasis,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AxisBottom, {\n    hideTicks: true,\n    scale: xScale,\n    top: yMax,\n    stroke: '#ffffff',\n    tickLabelProps: () => ({\n      fill: '#000000',\n      textAnchor: 'middle',\n      fontSize: 16,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#ffffff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(AxisLeft, {\n    scale: yScale,\n    stroke: '#ffffff',\n    hideTicks: false,\n    hideZero: true,\n    tickLabelProps: () => ({\n      dx: '1.25em',\n      dy: '-0.25em',\n      fill: '#000000',\n      textAnchor: 'left',\n      fontSize: 14,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#ffffff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }))), tooltipOpen && /*#__PURE__*/React.createElement(Tooltip, {\n    left: tooltipLeft,\n    top: tooltipTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ttStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"zip\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"descriptionHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Cases, Hospitalizations, Deaths\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Cases are by date of diagnosis \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 44\n    }\n  }), \"Hospitalizations are by date of admission\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 54\n    }\n  }), \"Deaths are by date of death\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 40\n    }\n  })))));\n}\n\nexport default Compa;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compa.js"],"names":["React","useEffect","useState","axios","AxisBottom","AxisLeft","curveBasis","LinearGradient","Group","scaleTime","scaleLinear","LinePath","useTooltip","Tooltip","Compa","data","setData","tooltipData","handleTooltip","tooltipLeft","tooltipTop","tooltipOpen","showTooltip","hideTooltip","tooltipTimeout","a","get","res","dump","lines","replace","split","headers","i","length","obj","line","curLine","j","toLowerCase","push","margin","top","bottom","left","right","width","height","xMax","yMax","date","d","Date","yNew","new_covid_case_count","yHosp","hospitalized_case_count","yDc","death_count","x","xScale","y1","yScale","y2","y3","domain","Math","min","map","max","range","padding","event","fill","textAnchor","fontSize","fontFamily","dx","dy"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport '../styles/comp.css'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { curveBasis } from '@vx/curve'\nimport { LinearGradient } from '@vx/gradient'\nimport { Group } from '@vx/group'\nimport { scaleTime, scaleLinear } from '@vx/scale'\nimport { LinePath } from '@vx/shape'\nimport { useTooltip, Tooltip } from '@vx/tooltip'\n\nfunction Compa() {\n  const [data, setData] = useState([])\n  const {\n    tooltipData,\n    handleTooltip,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip()\n\n  let tooltipTimeout\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n        headers = lines[0].split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n    \n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j] || 0\n        }\n\n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n  \n  const \n    margin = {\n      top: 40,\n      bottom: 40,\n      left: 0,\n      right: 0\n    },\n    width = 650,\n    height = 400,\n    xMax = width - 25,\n    yMax = height - 100,\n    date = d => new Date(d.date),\n    yNew = d => d.new_covid_case_count,\n    yHosp = d => d.hospitalized_case_count,\n    yDc = d => d.death_count,\n    x = d => xScale(date(d)),\n    y1 = d => yScale(yNew(d)),\n    y2 = d => yScale(yHosp(d)),\n    y3 = d => yScale(yDc(d))\n\n  const xScale = scaleTime({\n    domain: [Math.min(...data.map(date)), Math.max(...data.map(date))],\n    range: [0, xMax],\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    domain: [0, Math.max(...data.map(yNew))],\n    range: [yMax, 0]\n  })\n\n  return (\n    <>\n      <div className=\"svgWrapper\">\n        <svg width={width} height={height}> \n          <rect x={0} y={0} width={width} height={height} fill=\"#fbc2eb\" rx={14} />\n          <LinearGradient \n            from=\"#b39cea\" \n            to=\"#e99cea\" \n            id=\"gradient\"/>\n            <Group top={margin.top}>\n              <LinePath\n                data={data}\n                x={x}\n                y={y1}\n                stroke={'#ffffff'}\n                strokeWidth={2}\n                curve={curveBasis}\n                onTouchStart={event =>\n                  showTooltip({\n                    event,\n                    x,\n                    xScale,\n                    yScale,\n                    data: data\n                  })\n                }\n                onTouchMove={event =>\n                  showTooltip({\n                    event,\n                    x,\n                    xScale,\n                    yScale,\n                    data: data\n                  })\n                }\n                onMouseMove={event =>\n                  showTooltip({\n                    event,\n                    x,\n                    xScale,\n                    yScale,\n                    data: data\n                  })\n                }\n                onMouseLeave={event => hideTooltip()}\n              />\n              <LinePath\n                data={data}\n                x={x}\n                y={y2}\n                stroke={`url('#gradient')`}\n                strokeWidth={1}\n                curve={curveBasis}\n              />\n              <LinePath\n                data={data}\n                x={x}\n                y={y3}\n                stroke={'#ff0000'}\n                strokeWidth={1}\n                curve={curveBasis}\n              />\n              <AxisBottom\n                hideTicks={true}\n                scale={xScale}\n                top={yMax}\n                stroke={'#ffffff'}\n                tickLabelProps={() => ({\n                  fill: '#000000',\n                  textAnchor: 'middle',\n                  fontSize: 16,\n                  fontFamily: 'Snoopy'\n                })}\n                tickTextFill={'#ffffff'}\n              />\n              <AxisLeft\n                scale={yScale}\n                stroke={'#ffffff'}\n                hideTicks={false}\n                hideZero\n                tickLabelProps={() => ({\n                  dx: '1.25em',\n                  dy: '-0.25em',\n                  fill: '#000000',\n                  textAnchor: 'left',\n                  fontSize: 14,\n                  fontFamily: 'Snoopy'\n                })}\n                tickTextFill={'#ffffff'}\n              />\n            </Group>\n        </svg>\n        {tooltipOpen && (\n        <Tooltip left={tooltipLeft} top={tooltipTop}>\n          <div className=\"ttStyle\">\n            <strong>zip</strong>\n          </div>\n        </Tooltip>\n      )}\n      </div>\n      <div className=\"descDiv\">\n        <div className=\"headerWrap\">\n          <span className=\"descriptionHeader\">Cases, Hospitalizations, Deaths</span>\n        </div>\n        <div className=\"descWrap\">\n          <span className=\"description\">\n            Cases are by date of diagnosis <br />\n            Hospitalizations are by date of admission<br/>\n            Deaths are by date of death<br />\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Compa\n"]},"metadata":{},"sourceType":"module"}