{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/states.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { axisBottom, csv, curveCardinal, line, scaleLinear, select } from 'd3';\nimport '../styles/compa.css';\n\nfunction States() {\n  // d3.csv('https://github.com/nytimes/covid-19-data/blob/master/us-states.csv'\n  // )\n  const v = \"hey ho\";\n  useEffect(() => {\n    let v = \"HEY NIGGA\";\n  });\n  const [d, dFunc] = useState(25);\n\n  const dFunky = () => {\n    dFunc(d + 5000);\n  };\n\n  const [data, setData] = useState([10, 25, 50, 63, 91, 44, 71]);\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const lineFunc = line().x((value, index) => index * 50).y(value => 150 - value).curve(curveCardinal);\n    svg.selectAll(\"rect\").data([data]).enter().append(\"rect\").join(\"path\").attr(\"d\", lineFunc).attr(\"fill\", \"none\").attr(\"stroke\", \"purple\");\n  }, [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, d), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, v), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: dFunky,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"click!\"), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default States;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/states.js"],"names":["React","useRef","useEffect","useState","axisBottom","csv","curveCardinal","line","scaleLinear","select","States","v","d","dFunc","dFunky","data","setData","svgRef","svg","current","lineFunc","x","value","index","y","curve","selectAll","enter","append","join","attr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,aAA1B,EAAyCC,IAAzC,EAA+CC,WAA/C,EAA4DC,MAA5D,QAA0E,IAA1E;AACA,OAAO,qBAAP;;AAEA,SAASC,MAAT,GAAkB;AAChB;AAGA;AACA,QAAMC,CAAC,GAAG,QAAV;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,CAAC,GAAG,WAAR;AACD,GAFQ,CAAT;AAIA,QAAM,CAACC,CAAD,EAAIC,KAAJ,IAAaV,QAAQ,CAAC,EAAD,CAA3B;;AACA,QAAMW,MAAM,GAAG,MAAM;AACnBD,IAAAA,KAAK,CAACD,CAAC,GAAG,IAAL,CAAL;AACD,GAFD;;AAIA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAAD,CAAhC;AACA,QAAMc,MAAM,GAAGhB,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,GAAG,GAAGT,MAAM,CAACQ,MAAM,CAACE,OAAR,CAAlB;AAEA,UAAMC,QAAQ,GAAGb,IAAI,GAClBc,CADc,CACZ,CAACC,KAAD,EAAQC,KAAR,KAAkBA,KAAK,GAAG,EADd,EAEdC,CAFc,CAEZF,KAAK,IAAI,MAAMA,KAFH,EAGdG,KAHc,CAGRnB,aAHQ,CAAjB;AAKAY,IAAAA,GAAG,CACAQ,SADH,CACa,MADb,EAEGX,IAFH,CAEQ,CAACA,IAAD,CAFR,EAGGY,KAHH,GAIGC,MAJH,CAIU,MAJV,EAKGC,IALH,CAKQ,MALR,EAMGC,IANH,CAMQ,GANR,EAMaV,QANb,EAOGU,IAPH,CAOQ,MAPR,EAOgB,MAPhB,EAQGA,IARH,CAQQ,QARR,EAQkB,QARlB;AASD,GAjBQ,EAiBN,CAACf,IAAD,CAjBM,CAAT;AAmBA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAL,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAEG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,IAAA,GAAG,EAAEG,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,eAAeP,MAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { axisBottom, csv, curveCardinal, line, scaleLinear, select } from 'd3'\nimport '../styles/compa.css'\n\nfunction States() {\n  // d3.csv('https://github.com/nytimes/covid-19-data/blob/master/us-states.csv'\n  \n  \n  // )\n  const v = \"hey ho\"\n\n  useEffect(() => {\n    let v = \"HEY NIGGA\"\n  })\n\n  const [d, dFunc] = useState(25)\n  const dFunky = () => {\n    dFunc(d + 5000)\n  }\n\n  const [data, setData] = useState([10, 25, 50, 63, 91, 44, 71])\n  const svgRef = useRef()\n\n  useEffect(() => {\n    const svg = select(svgRef.current)\n\n    const lineFunc = line()\n      .x((value, index) => index * 50)\n      .y(value => 150 - value)\n      .curve(curveCardinal)\n\n    svg\n      .selectAll(\"rect\")\n      .data([data])\n      .enter()\n      .append(\"rect\")\n      .join(\"path\")\n      .attr(\"d\", lineFunc)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"purple\")\n  }, [data])\n\n  return (\n    <React.Fragment>\n      <h1>{d}</h1>\n      <h5>{v}</h5>\n      <button onClick={dFunky}>click!</button>\n      <svg ref={svgRef} />\n    </React.Fragment>\n  )\n}\n\nexport default States\n\n"]},"metadata":{},"sourceType":"module"}