{"ast":null,"code":"import _toConsumableArray from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import{AxisBottom,AxisLeft}from'@vx/axis';import{curveBasis}from'@vx/curve';import{localPoint}from'@vx/event';import{LinearGradient}from'@vx/gradient';import{Group}from'@vx/group';import{scaleTime,scaleLinear}from'@vx/scale';import{Bar,Line,LinePath}from'@vx/shape';import{useTooltip}from'@vx/tooltip';import'../styles/comp.css';var Compa=function Compa(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useTooltip=useTooltip(),tooltipData=_useTooltip.tooltipData,tooltipLeft=_useTooltip.tooltipLeft,tooltipTop=_useTooltip.tooltipTop,tooltipOpen=_useTooltip.tooltipOpen,showTooltip=_useTooltip.showTooltip,hideTooltip=_useTooltip.hideTooltip;useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var a,res,dump,lines,headers,i,obj,line,curLine,j;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv');case 2:a=_context.sent;_context.next=5;return a.data;case 5:res=_context.sent;dump=[],lines=res.replace('DATE_OF_INTEREST','date').replace(/^[A-Za-z\\s\\.]+/g,'date').split('\\r'),headers=lines[0].split(',');console.log(lines);for(i=1;i<lines.length;i++){obj={},line=lines[i].replace('\\n',''),curLine=line.split(',');for(j=0;j<headers.length;j++){obj[headers[j].toLowerCase()]=curLine[j]||0;}dump.push(obj);}setData(dump);case 10:case\"end\":return _context.stop();}}},_callee);}))();},[]);var margin={top:40,bottom:40,left:0,right:0},width=650,height=400,xMax=width-25,yMax=height-100,date=function date(d){return new Date(d.date);},yNew=function yNew(d){return d.new_covid_case_count;},yHosp=function yHosp(d){return d.hospitalized_case_count;},yDc=function yDc(d){return d.death_count;},x=function x(d){return xScale(date(d));},y1=function y1(d){return yScale(yNew(d));},y2=function y2(d){return yScale(yHosp(d));},y3=function y3(d){return yScale(yDc(d));};var xScale=scaleTime({domain:[Math.min.apply(Math,_toConsumableArray(data.map(date))),Math.max.apply(Math,_toConsumableArray(data.map(date)))],range:[0,xMax],padding:0.4});var yScale=scaleLinear({domain:[0,Math.max.apply(Math,_toConsumableArray(data.map(yNew)))],range:[yMax,0]});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"svgWrapper\"},/*#__PURE__*/React.createElement(\"svg\",{width:width,height:height},/*#__PURE__*/React.createElement(LinearGradient,{from:\"#fbc2eb\",to:\"#ede1ed\",id:\"gradient\"}),/*#__PURE__*/React.createElement(\"rect\",{x:0,y:0,width:width,height:height,fill:\"url('#gradient')\",rx:14}),/*#__PURE__*/React.createElement(Group,{top:margin.top},/*#__PURE__*/React.createElement(LinePath,{data:data,x:x,y:y1,stroke:'#ffffff',strokeLinecap:\"round\",strokeWidth:2,curve:curveBasis}),/*#__PURE__*/React.createElement(LinePath,{data:data,x:x,y:y2,stroke:\"#736ca3\",strokeLinecap:\"round\",strokeWidth:1,curve:curveBasis}),/*#__PURE__*/React.createElement(LinePath,{data:data,x:x,y:y3,stroke:'#ff0000',strokeLinecap:\"round\",strokeWidth:1,curve:curveBasis}),/*#__PURE__*/React.createElement(AxisBottom,{hideAxisLine:true,hideTicks:true,scale:xScale,top:yMax,stroke:'#ffffff',tickLabelProps:function tickLabelProps(){return{fill:'#000000',textAnchor:'middle',fontSize:16,fontFamily:'Snoopy'};},tickTextFill:'#ffffff'}),/*#__PURE__*/React.createElement(AxisLeft,{scale:yScale,stroke:'#ffffff',hideTicks:false,tickLabelProps:function tickLabelProps(){return{dx:'1.75em',dy:'-0.75em',fill:'#000000',textAnchor:'start',fontSize:14,fontFamily:'Snoopy'};},tickTextFill:'#ffffff'}))),tooltipOpen&&/*#__PURE__*/React.createElement(\"div\",{className:\"tooltip\",style:{position:\"absolute\",top:tooltipTop+height/2,left:tooltipLeft+width/2,pointerEvents:\"none\",background:\"rgba(0,0,0,0.3)\"}},JSON.stringify(tooltipData,undefined,\"\\n\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"descDiv\"},/*#__PURE__*/React.createElement(\"div\",{className:\"headerWrap\"},/*#__PURE__*/React.createElement(\"span\",{className:\"descriptionHeader\"},\"Cases, Hospitalizations, Deaths\")),/*#__PURE__*/React.createElement(\"div\",{className:\"descWrap\"},/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"Cases are by date of diagnosis\",/*#__PURE__*/React.createElement(\"br\",null),\"Hospitalizations are by date of admission\",/*#__PURE__*/React.createElement(\"br\",null),\"Deaths are by date of death\",/*#__PURE__*/React.createElement(\"br\",null)))));};export default Compa;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compa.js"],"names":["React","useEffect","useState","axios","AxisBottom","AxisLeft","curveBasis","localPoint","LinearGradient","Group","scaleTime","scaleLinear","Bar","Line","LinePath","useTooltip","Compa","data","setData","tooltipData","tooltipLeft","tooltipTop","tooltipOpen","showTooltip","hideTooltip","get","a","res","dump","lines","replace","split","headers","console","log","i","length","obj","line","curLine","j","toLowerCase","push","margin","top","bottom","left","right","width","height","xMax","yMax","date","d","Date","yNew","new_covid_case_count","yHosp","hospitalized_case_count","yDc","death_count","x","xScale","y1","yScale","y2","y3","domain","Math","min","map","max","range","padding","fill","textAnchor","fontSize","fontFamily","dx","dy","position","pointerEvents","background","JSON","stringify","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { curveBasis } from '@vx/curve'\nimport { localPoint } from '@vx/event';\nimport { LinearGradient } from '@vx/gradient'\nimport { Group } from '@vx/group'\nimport { scaleTime, scaleLinear } from '@vx/scale'\nimport { Bar, Line, LinePath } from '@vx/shape'\nimport { useTooltip } from '@vx/tooltip'\nimport '../styles/comp.css'\n\nconst Compa = () => {\n  const [data, setData] = useState([])\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip()\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace('DATE_OF_INTEREST', 'date').replace(/^[A-Za-z\\s\\.]+/g, 'date').split('\\r'),\n        headers = lines[0].split(',')\n\n      console.log(lines)\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n    \n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j] || 0\n        }\n\n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n  \n  const \n    margin = {\n      top: 40,\n      bottom: 40,\n      left: 0,\n      right: 0\n    },\n    width = 650,\n    height = 400,\n    xMax = width - 25,\n    yMax = height - 100,\n    date = d => new Date(d.date),\n    yNew = d => d.new_covid_case_count,\n    yHosp = d => d.hospitalized_case_count,\n    yDc = d => d.death_count,\n    x = d => xScale(date(d)),\n    y1 = d => yScale(yNew(d)),\n    y2 = d => yScale(yHosp(d)),\n    y3 = d => yScale(yDc(d))\n\n  const xScale = scaleTime({\n    domain: [Math.min(...data.map(date)), Math.max(...data.map(date))],\n    range: [0, xMax],\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    domain: [0, Math.max(...data.map(yNew))],\n    range: [yMax, 0]\n  })\n\n  return (\n    <>\n      <div className=\"svgWrapper\">\n        <svg width={width} height={height}> \n          <LinearGradient \n              from=\"#fbc2eb\" \n              to=\"#ede1ed\" \n              id=\"gradient\"/>\n          <rect x={0} y={0} width={width} height={height} fill={`url('#gradient')`} rx={14} />\n            <Group top={margin.top}>\n              <LinePath\n                data={data}\n                x={x}\n                y={y1}\n                stroke={'#ffffff'}\n                strokeLinecap=\"round\"\n                strokeWidth={2}\n                curve={curveBasis}\n              />\n              <LinePath\n                data={data}\n                x={x}\n                y={y2}\n                stroke={`#736ca3`}\n                strokeLinecap=\"round\"\n                strokeWidth={1}\n                curve={curveBasis}\n              />\n              <LinePath\n                data={data}\n                x={x}\n                y={y3}\n                stroke={'#ff0000'}\n                strokeLinecap=\"round\"\n                strokeWidth={1}\n                curve={curveBasis}\n              />\n              <AxisBottom\n                hideAxisLine\n                hideTicks={true}\n                scale={xScale}\n                top={yMax}\n                stroke={'#ffffff'}\n                tickLabelProps={() => ({\n                  fill: '#000000',\n                  textAnchor: 'middle',\n                  fontSize: 16,\n                  fontFamily: 'Snoopy'\n                })}\n                tickTextFill={'#ffffff'}\n              />\n              <AxisLeft\n                scale={yScale}\n                stroke={'#ffffff'}\n                hideTicks={false}\n                tickLabelProps={() => ({\n                  dx: '1.75em',\n                  dy: '-0.75em',\n                  fill: '#000000',\n                  textAnchor: 'start',\n                  fontSize: 14,\n                  fontFamily: 'Snoopy'\n                })}\n                tickTextFill={'#ffffff'}\n              />\n            </Group>\n        </svg>\n        {tooltipOpen && (\n          <div\n            className=\"tooltip\"\n            style={{\n              position: \"absolute\",\n              top: tooltipTop + height / 2,\n              left: tooltipLeft + width / 2,\n              pointerEvents: \"none\",\n              background: \"rgba(0,0,0,0.3)\"\n            }}\n          >\n            {JSON.stringify(tooltipData, undefined, \"\\n\")}\n          </div>\n        )}\n      </div>\n      <div className=\"descDiv\">\n        <div className=\"headerWrap\">\n          <span className=\"descriptionHeader\">Cases, Hospitalizations, Deaths</span>\n        </div>\n        <div className=\"descWrap\">\n          <span className=\"description\">\n            Cases are by date of diagnosis<br />\n            Hospitalizations are by date of admission<br/>\n            Deaths are by date of death<br />\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Compa\n"]},"metadata":{},"sourceType":"module"}