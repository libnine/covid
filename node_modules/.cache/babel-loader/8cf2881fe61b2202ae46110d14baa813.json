{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compa.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Group } from '@vx/group';\nimport { LinePath } from '@vx/shape';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { line } from 'd3-shape';\nimport { extent, max } from 'd3-array';\nimport { select } from 'd3-selection';\n\nfunction Compa() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n\n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j];\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n  const width = window.innerWidth / 2,\n        height = window.innerHeight / 2,\n        xMax = width,\n        yMax = height;\n  const svg = select(\"#sv\");\n\n  x = d => new Date(d.date);\n\n  y = d => d.new_covid_case_count, y2 = d => d.hospitalized_case_count, y3 = d => d.death_count;\n  const xScale = scaleTime({\n    range: [0, xMax],\n    domain: extent(data, x)\n  });\n  const yScale = scaleLinear({\n    range: [yMax, 0],\n    domain: [0, max(data, y)]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    id: \"svgData\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#fbc2eb\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Compa;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compa.js"],"names":["React","useEffect","useState","axios","Group","LinePath","scaleTime","scaleLinear","AxisLeft","AxisBottom","line","extent","max","select","Compa","data","setData","a","get","res","dump","lines","replace","split","headers","i","length","obj","curLine","j","toLowerCase","push","width","window","innerWidth","height","innerHeight","xMax","yMax","svg","x","d","Date","date","y","new_covid_case_count","y2","hospitalized_case_count","y3","death_count","xScale","range","domain","yScale"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Group } from '@vx/group'\nimport { LinePath } from '@vx/shape'\nimport { scaleTime, scaleLinear } from '@vx/scale'\nimport { AxisLeft, AxisBottom } from '@vx/axis'\nimport { line } from 'd3-shape'\nimport { extent, max } from 'd3-array'\nimport { select } from 'd3-selection'\n\nfunction Compa() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n        headers = lines[0].split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n    \n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j]\n        }\n    \n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n  \n  const \n    width = window.innerWidth / 2,\n    height = window.innerHeight / 2,\n    xMax = width,\n    yMax = height\n\n  const\n    svg = select(\"#sv\")\n    x = d => new Date(d.date)\n    y = d => d.new_covid_case_count,\n    y2 = d => d.hospitalized_case_count,\n    y3 = d => d.death_count\n\n  const xScale = scaleTime({\n    range: [0, xMax],\n    domain: extent(data, x)\n  })\n\n  const yScale = scaleLinear({\n    range: [yMax, 0],\n    domain: [0, max(data, y)],\n  })\n\n  return (\n    <>\n      <svg width={width} height={height} id=\"svgData\"> \n        <rect x={0} y={0} width={width} height={height} fill=\"#fbc2eb\" rx={14} />\n\n      </svg>\n    </>\n  )\n}\n\nexport default Compa\n"]},"metadata":{},"sourceType":"module"}