{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/appa.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { axisBottom, curveCardinal, line, scaleLinear, select } from 'd3';\n\nfunction Appa() {\n  const [data, setData] = useState([10, 25, 50, 63, 91, 44, 71]);\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const xAxis = axisBottom();\n    const xScale = scaleLinear().domain([0, 6]).range([0, 300]);\n    const lineFunc = line().x((value, index) => xScale(index)).y(value => 150 - value).curve(curveCardinal); // svg\n    //   .selectAll(\"circle\")\n    //   .data(data)\n    //   .join(\"circle\")\n    //   .attr(\"r\", value => value)\n    //   .attr(\"cx\", value => value * 2)\n    //   .attr(\"cy\", value => value * 2)\n    //   .attr(\"stroke\", \"red\")\n\n    svg.selectAll(\"path\").data([data]).join(\"path\").attr(\"d\", value => lineFunc(value)).attr(\"fill\", \"none\").attr(\"stroke\", \"purple\");\n  }, [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0,150 100,100 150,120\",\n    stroke: \"purple\",\n    fill: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setData(data.map(value => value + 5)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setData(data.filter(value => value < 50)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Filter\"));\n}\n\nexport default Appa;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/appa.js"],"names":["React","useRef","useEffect","useState","axisBottom","curveCardinal","line","scaleLinear","select","Appa","data","setData","svgRef","svg","current","xAxis","xScale","domain","range","lineFunc","x","value","index","y","curve","selectAll","join","attr","map","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,IAApC,EAA0CC,WAA1C,EAAuDC,MAAvD,QAAqE,IAArE;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAAD,CAAhC;AACA,QAAMS,MAAM,GAAGX,MAAM,EAArB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,GAAG,GAAGL,MAAM,CAACI,MAAM,CAACE,OAAR,CAAlB;AACA,UAAMC,KAAK,GAAGX,UAAU,EAAxB;AACA,UAAMY,MAAM,GAAGT,WAAW,GACvBU,MADY,CACL,CAAC,CAAD,EAAI,CAAJ,CADK,EAEZC,KAFY,CAEN,CAAC,CAAD,EAAI,GAAJ,CAFM,CAAf;AAIA,UAAMC,QAAQ,GAAGb,IAAI,GAClBc,CADc,CACZ,CAACC,KAAD,EAAQC,KAAR,KAAkBN,MAAM,CAACM,KAAD,CADZ,EAEdC,CAFc,CAEZF,KAAK,IAAI,MAAMA,KAFH,EAGdG,KAHc,CAGRnB,aAHQ,CAAjB,CAPc,CAWd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAQ,IAAAA,GAAG,CAACY,SAAJ,CAAc,MAAd,EACGf,IADH,CACQ,CAACA,IAAD,CADR,EAEGgB,IAFH,CAEQ,MAFR,EAGGC,IAHH,CAGQ,GAHR,EAGaN,KAAK,IAAIF,QAAQ,CAACE,KAAD,CAH9B,EAIGM,IAJH,CAIQ,MAJR,EAIgB,MAJhB,EAKGA,IALH,CAKQ,QALR,EAKkB,QALlB;AAMD,GAzBQ,EAyBN,CAACjB,IAAD,CAzBM,CAAT;AA2BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,CAAC,EAAC,wBAAR;AAAiC,IAAA,MAAM,EAAC,QAAxC;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACD,IAAI,CAACkB,GAAL,CAASP,KAAK,IAAIA,KAAK,GAAG,CAA1B,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAQ,IAAA,OAAO,EAAE,MAAMV,OAAO,CAACD,IAAI,CAACmB,MAAL,CAAYR,KAAK,IAAIA,KAAK,GAAG,EAA7B,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF;AAcD;;AAED,eAAeZ,IAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport { axisBottom, curveCardinal, line, scaleLinear, select } from 'd3'\n\nfunction Appa() {\n  const [data, setData] = useState([10, 25, 50, 63, 91, 44, 71])\n  const svgRef = useRef()\n  useEffect(() => {\n    const svg = select(svgRef.current)\n    const xAxis = axisBottom()\n    const xScale = scaleLinear()\n      .domain([0, 6])\n      .range([0, 300])\n\n    const lineFunc = line()\n      .x((value, index) => xScale(index))\n      .y(value => 150 - value)\n      .curve(curveCardinal)\n    // svg\n    //   .selectAll(\"circle\")\n    //   .data(data)\n    //   .join(\"circle\")\n    //   .attr(\"r\", value => value)\n    //   .attr(\"cx\", value => value * 2)\n    //   .attr(\"cy\", value => value * 2)\n    //   .attr(\"stroke\", \"red\")\n    svg.selectAll(\"path\")\n      .data([data])\n      .join(\"path\")\n      .attr(\"d\", value => lineFunc(value))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"purple\")\n  }, [data])\n\n  return (\n    <React.Fragment>\n      <svg ref={svgRef}> \n        <path d=\"M0,150 100,100 150,120\" stroke=\"purple\" fill=\"none\" />\n      </svg>\n      <br />\n      <button onClick={() => setData(data.map(value => value + 5))}>\n        Update      \n      </button>\n      <button onClick={() => setData(data.filter(value => value < 50))}>\n        Filter      \n      </button>\n    </React.Fragment>\n  )\n}\n\nexport default Appa"]},"metadata":{},"sourceType":"module"}