{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/states.js\";\nimport React, { useEffect, useState } from 'react';\nimport { extent, max } from 'd3-array';\nimport { scaleLinear, scaleTime } from '@vx/scale';\nimport { LinePath } from '@vx/shape';\nimport axios from 'axios';\n\nfunction States() {\n  const [dump, dFunc] = useState(),\n        [xScale, xFunc] = useState(),\n        [yScale, yFunc] = useState();\n  const width = window.innerWidth / 3,\n        height = window.innerHeight / 2,\n        padding = 100;\n\n  async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json');\n    let res = await a.data[\"bpi\"];\n    return Object.keys(res).map(key => {\n      return {\n        x: key,\n        y: res[key]\n      };\n    });\n  }\n\n  useEffect(() => {\n    async function scaleFunc(data) {\n      let x = scaleTime({\n        domain: extent(data, d => new Date(d.x)),\n        range: [padding, width - padding]\n      });\n      let y = scaleLinear({\n        domain: [0, max(data, d => d.y) + max(data, d => d.y) / 3],\n        range: [height - padding, padding]\n      });\n      return {\n        x,\n        y\n      };\n    }\n\n    try {\n      dMapped().then(ret => {\n        dFunc(ret);\n        scaleFunc(ret).then((x, y) => {\n          xFunc(x);\n          yFunc(y);\n        });\n      });\n    } catch (e) {\n      throw e;\n    }\n  }, [height, width]); // xSelector = d => new Date(d.x),\n  // ySelector = d => d.y\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#b57edc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: dump,\n    x: d => xScale(d => new Date(d.x)),\n    y: d => yScale(d => d.y),\n    strokeWidth: 5,\n    stroke: \"#ffffff\",\n    strokeLinecap: \"round\",\n    fill: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default States;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/states.js"],"names":["React","useEffect","useState","extent","max","scaleLinear","scaleTime","LinePath","axios","States","dump","dFunc","xScale","xFunc","yScale","yFunc","width","window","innerWidth","height","innerHeight","padding","dMapped","a","get","res","data","Object","keys","map","key","x","y","scaleFunc","domain","d","Date","range","then","ret","e"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { extent, max } from 'd3-array'\nimport { scaleLinear, scaleTime } from '@vx/scale'\nimport { LinePath } from '@vx/shape'\nimport axios from 'axios'\n\nfunction States() {\n  const \n    [dump, dFunc] = useState(),\n    [xScale, xFunc] = useState(),\n    [yScale, yFunc] = useState()\n\n  const\n    width = window.innerWidth / 3, \n    height = window.innerHeight / 2,\n    padding = 100\n\n  async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json')\n    let res = await a.data[\"bpi\"]\n    return Object.keys(res).map((key) => {\n          return {\n            x: key,\n            y: res[key]\n          }\n      })\n  }\n\n  useEffect(() => {\n    async function scaleFunc(data) {\n      let x = scaleTime({\n        domain: extent(data, d => new Date(d.x)),\n        range: [padding, width - padding]\n      })\n  \n      let y = scaleLinear({\n        domain: [0, max(data, d => d.y) + ((max(data, d => d.y) / 3))],\n        range: [height - padding, padding]\n      })\n  \n      return { x, y }\n    }\n  \n    try {\n      dMapped()\n        .then((ret) => {\n          dFunc(ret)\n          \n          scaleFunc(ret)\n            .then((x, y) => { \n              xFunc(x)\n              yFunc(y)\n            })\n        })\n    }\n    \n    catch(e) { \n      throw(e)\n    }\n  }, [height, width])\n  // xSelector = d => new Date(d.x),\n  // ySelector = d => d.y\n    return (\n      <>\n        <svg width={width} height={height}>\n          <rect x={0} y={0} width={width} height={height} fill=\"#b57edc\" />\n          <LinePath\n            data={dump}\n            x={d => xScale(d => new Date(d.x))}\n            y={d => yScale(d => d.y)}\n            strokeWidth={5}\n            stroke=\"#ffffff\"\n            strokeLinecap=\"round\"\n            fill=\"transparent\"\n          />\n        </svg>\n      </>\n    )\n}\n\nexport default States\n"]},"metadata":{},"sourceType":"module"}