{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport Line from '@vx/shape/lib/shapes/Line';\nimport { Group } from '@vx/group';\nimport { Point } from '@vx/point';\nexport default function GridColumns(_ref) {\n  var _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      scale = _ref.scale,\n      height = _ref.height,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#eaf0f6' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      className = _ref.className,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks,\n      lineStyle = _ref.lineStyle,\n      offset = _ref.offset,\n      tickValues = _ref.tickValues,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"top\", \"left\", \"scale\", \"height\", \"stroke\", \"strokeWidth\", \"strokeDasharray\", \"className\", \"numTicks\", \"lineStyle\", \"offset\", \"tickValues\"]);\n\n  var ticks = tickValues || (scale.ticks ? scale.ticks(numTicks) : scale.domain());\n  return React.createElement(Group, {\n    className: cx('vx-columns', className),\n    top: top,\n    left: left\n  }, ticks.map(function (d, i) {\n    var x = offset ? (scale(d) || 0) + offset : scale(d) || 0;\n    var fromPoint = new Point({\n      x: x,\n      y: 0\n    });\n    var toPoint = new Point({\n      x: x,\n      y: height\n    });\n    return React.createElement(Line, _extends({\n      key: \"column-line-\" + d + \"-\" + i,\n      from: fromPoint,\n      to: toPoint,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      style: lineStyle\n    }, restProps));\n  }));\n}\nGridColumns.propTypes = {\n  height: _pt.number.isRequired\n};","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/node_modules/@vx/grid/esm/grids/GridColumns.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","cx","Line","Group","Point","GridColumns","_ref","_ref$top","top","_ref$left","left","scale","height","_ref$stroke","stroke","_ref$strokeWidth","strokeWidth","strokeDasharray","className","_ref$numTicks","numTicks","lineStyle","offset","tickValues","restProps","ticks","domain","createElement","map","d","x","fromPoint","y","toPoint","from","to","style","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport Line from '@vx/shape/lib/shapes/Line';\nimport { Group } from '@vx/group';\nimport { Point } from '@vx/point';\nexport default function GridColumns(_ref) {\n  var _ref$top = _ref.top,\n      top = _ref$top === void 0 ? 0 : _ref$top,\n      _ref$left = _ref.left,\n      left = _ref$left === void 0 ? 0 : _ref$left,\n      scale = _ref.scale,\n      height = _ref.height,\n      _ref$stroke = _ref.stroke,\n      stroke = _ref$stroke === void 0 ? '#eaf0f6' : _ref$stroke,\n      _ref$strokeWidth = _ref.strokeWidth,\n      strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      className = _ref.className,\n      _ref$numTicks = _ref.numTicks,\n      numTicks = _ref$numTicks === void 0 ? 10 : _ref$numTicks,\n      lineStyle = _ref.lineStyle,\n      offset = _ref.offset,\n      tickValues = _ref.tickValues,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"top\", \"left\", \"scale\", \"height\", \"stroke\", \"strokeWidth\", \"strokeDasharray\", \"className\", \"numTicks\", \"lineStyle\", \"offset\", \"tickValues\"]);\n\n  var ticks = tickValues || (scale.ticks ? scale.ticks(numTicks) : scale.domain());\n  return React.createElement(Group, {\n    className: cx('vx-columns', className),\n    top: top,\n    left: left\n  }, ticks.map(function (d, i) {\n    var x = offset ? (scale(d) || 0) + offset : scale(d) || 0;\n    var fromPoint = new Point({\n      x: x,\n      y: 0\n    });\n    var toPoint = new Point({\n      x: x,\n      y: height\n    });\n    return React.createElement(Line, _extends({\n      key: \"column-line-\" + d + \"-\" + i,\n      from: fromPoint,\n      to: toPoint,\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      style: lineStyle\n    }, restProps));\n  }));\n}\nGridColumns.propTypes = {\n  height: _pt.number.isRequired\n};"]},"metadata":{},"sourceType":"module"}