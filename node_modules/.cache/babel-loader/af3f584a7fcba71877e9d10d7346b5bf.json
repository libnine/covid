{"ast":null,"code":"import _toConsumableArray from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import{Bar}from'@vx/shape';import{Group}from'@vx/group';import{AxisBottom,AxisLeft}from'@vx/axis';import{LinearGradient}from'@vx/gradient';import{scaleBand,scaleLinear}from'@vx/scale';var Compb=function Compb(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var a,res,dump,lines,headers,i,obj,line,curLine,j;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv');case 2:a=_context.sent;_context.next=5;return a.data;case 5:res=_context.sent;dump=[],lines=res.replace('The ','').split('\\r'),headers=lines[0].split(',');i=1;case 8:if(!(i<lines.length)){_context.next=17;break;}obj={},line=lines[i].replace('\\n',''),curLine=line.split(',');if(!(curLine[0]==='Citywide')){_context.next=12;break;}return _context.abrupt(\"continue\",14);case 12:for(j=0;j<headers.length;j++){obj[headers[j].toLowerCase()]=curLine[j];}dump.push(obj);case 14:i++;_context.next=8;break;case 17:setData(dump);case 18:case\"end\":return _context.stop();}}},_callee);}))();},[]);var x=function x(d){return d.borough_group;},y=function y(d){return d.covid_case_count;},width=650,height=400,xMax=width,yMax=height-100;var xScale=scaleBand({rangeRound:[0,xMax],domain:data.map(x),padding:0.4});var yScale=scaleLinear({rangeRound:[yMax,0],domain:[0,Math.max.apply(Math,_toConsumableArray(data.map(y)))]});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"svgWrapper\"},/*#__PURE__*/React.createElement(\"svg\",{width:width,height:height},/*#__PURE__*/React.createElement(LinearGradient,{from:\"#fbc2eb\",to:\"#ede1ed\",id:\"gradient\"}),/*#__PURE__*/React.createElement(LinearGradient,{from:\"#736ca3\",to:\"#b8c1e3\",id:\"gradient-2\"}),/*#__PURE__*/React.createElement(\"rect\",{width:width,height:height,fill:\"url(#gradient)\",rx:14}),/*#__PURE__*/React.createElement(Group,{top:40},data.map(function(d){var boro=x(d),barWidth=xScale.bandwidth(),barHeight=yMax-yScale(y(d)),barX=xScale(boro),barY=yMax-barHeight;return/*#__PURE__*/React.createElement(Group,null,/*#__PURE__*/React.createElement(Bar,{x:barX,y:barY,width:barWidth,height:barHeight,fill:\"url(#gradient-2)\",rx:5}),/*#__PURE__*/React.createElement(\"text\",{x:xScale(x(d)),y:yMax-barHeight,dx:\"5%\",dy:\"-2%\",textAnchor:\"middle\",fill:\"#53486b\",fontSize:15,fontFamily:\"Snoopy\"},parseFloat(parseInt(d.covid_case_count)/1000).toPrecision(3).toLocaleString(),\"%\"));}),/*#__PURE__*/React.createElement(AxisBottom,{hideTicks:true,scale:xScale,top:yMax,stroke:'#ffffff',tickLabelProps:function tickLabelProps(){return{fill:'#000000',textAnchor:'middle',fontSize:18,fontFamily:'Snoopy'};},tickTextFill:'#ffffff'})))),/*#__PURE__*/React.createElement(\"div\",{className:\"descDiv\"},/*#__PURE__*/React.createElement(\"div\",{className:\"headerWrap\"},/*#__PURE__*/React.createElement(\"span\",{className:\"descriptionHeader\"},\"Borough Breakdown\")),/*#__PURE__*/React.createElement(\"div\",{className:\"descWrap\"},/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"Cumulative since the start of the outbreak\",/*#__PURE__*/React.createElement(\"br\",null),\"Age adjusted according to \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://www.cdc.gov/nchs/data/statnt/statnt20.pdf\"},\"the US 2000 standard population\")))));};export default Compb;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compb.js"],"names":["React","useEffect","useState","axios","Bar","Group","AxisBottom","AxisLeft","LinearGradient","scaleBand","scaleLinear","Compb","data","setData","get","a","res","dump","lines","replace","split","headers","i","length","obj","line","curLine","j","toLowerCase","push","x","d","borough_group","y","covid_case_count","width","height","xMax","yMax","xScale","rangeRound","domain","map","padding","yScale","Math","max","boro","barWidth","bandwidth","barHeight","barX","barY","parseFloat","parseInt","toPrecision","toLocaleString","fill","textAnchor","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Bar } from '@vx/shape'\nimport { Group } from '@vx/group'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { LinearGradient } from '@vx/gradient'\nimport { scaleBand, scaleLinear } from '@vx/scale'\n\nconst Compb = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv')\n      let res = await a.data\n\n      let \n        dump = [],\n        lines = res.replace('The ', '').split('\\r'),\n        headers = lines[0].split(',')\n    \n      for (let i = 1; i < lines.length; i++) {\n        let \n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n\n        if (curLine[0] === 'Citywide') continue\n    \n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j]\n        }\n    \n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n\n  const \n    x = d => d.borough_group,\n    y = d => d.covid_case_count,\n    width = 650,  \n    height = 400,\n    xMax = width,\n    yMax = height - 100\n\n  const xScale = scaleBand({\n    rangeRound: [0, xMax],\n    domain: data.map(x),\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    rangeRound: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))]\n  })\n\n  return (\n    <>\n      <div className=\"svgWrapper\">\n        <svg width={width} height={height}>\n        <LinearGradient \n            from=\"#fbc2eb\" \n            to=\"#ede1ed\" \n            id=\"gradient\"/>\n        <LinearGradient \n            from=\"#736ca3\" \n            to=\"#b8c1e3\" \n            id=\"gradient-2\"/>\n          <rect width={width} height={height} fill=\"url(#gradient)\" rx={14} />\n          <Group top={40}>\n            {data.map((d) => {\n              const \n                boro = x(d),\n                barWidth = xScale.bandwidth(),\n                barHeight = yMax - yScale(y(d)),\n                barX = xScale(boro),\n                barY = yMax - barHeight\n\n              return (\n                <Group>\n                  <Bar\n                    x={barX}\n                    y={barY}\n                    width={barWidth}\n                    height={barHeight}\n                    fill=\"url(#gradient-2)\"\n                    rx={5}\n                  />\n                  <text\n                    x={xScale(x(d))}\n                    y={yMax - barHeight}\n                    dx={\"5%\"}\n                    dy={\"-2%\"}\n                    textAnchor=\"middle\"\n                    fill=\"#53486b\"\n                    fontSize={15}\n                    fontFamily={\"Snoopy\"}\n                  >\n                    {parseFloat((parseInt(d.covid_case_count) / 1000)).toPrecision(3).toLocaleString()}%\n                  </text>\n                </Group>\n              )\n            })}\n\n            <AxisBottom\n              hideTicks={true}\n              scale={xScale}\n              top={yMax}\n              stroke={'#ffffff'}\n              tickLabelProps={() => ({\n                fill: '#000000',\n                textAnchor: 'middle',\n                fontSize: 18,\n                fontFamily: 'Snoopy'\n              })}\n              tickTextFill={'#ffffff'}\n            />\n          </Group>\n        </svg>\n      </div>\n      <div className=\"descDiv\">\n        <div className=\"headerWrap\">\n          <span className=\"descriptionHeader\">Borough Breakdown</span>\n        </div>\n        <div className=\"descWrap\">\n          <span className=\"description\">\n            Cumulative since the start of the outbreak<br />\n            Age adjusted according to <a href=\"https://www.cdc.gov/nchs/data/statnt/statnt20.pdf\">the US 2000 standard population</a>\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Compb\n"]},"metadata":{},"sourceType":"module"}