{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compb.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from '@vx/shape';\nimport { Group } from '@vx/group';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { LinearGradient } from '@vx/gradient';\nimport { scaleBand, scaleLinear } from '@vx/scale';\n\nconst Compb = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace('The ', '').split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n        if (curLine[0] === 'Citywide') continue;\n\n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j];\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n\n  const x = d => d.borough_group,\n        y = d => d.covid_case_count,\n        width = 650,\n        height = 400,\n        xMax = width,\n        yMax = height - 100;\n\n  const xScale = scaleBand({\n    rangeRound: [0, xMax],\n    domain: data.map(x),\n    padding: 0.4\n  });\n  const yScale = scaleLinear({\n    rangeRound: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svgWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LinearGradient, {\n    from: \"#fbc2eb\",\n    to: \"#ede1ed\",\n    id: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: \"url(#gradient)\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Group, {\n    top: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, data.map(d => {\n    const boro = x(d),\n          barWidth = xScale.bandwidth(),\n          barHeight = yMax - yScale(y(d)),\n          barX = xScale(boro),\n          barY = yMax - barHeight;\n    return /*#__PURE__*/React.createElement(Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      x: barX,\n      y: barY,\n      width: barWidth,\n      height: barHeight,\n      fill: \"#8996c9\",\n      rx: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      x: xScale(x(d)),\n      y: yMax - barHeight,\n      dx: \"5%\",\n      dy: \"-2%\",\n      textAnchor: \"middle\",\n      fill: \"#53486b\",\n      fontSize: 15,\n      fontFamily: \"Snoopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, parseFloat(parseInt(d.covid_case_count) / 1000).toPrecision(3).toLocaleString(), \"%\"));\n  }), /*#__PURE__*/React.createElement(AxisBottom, {\n    hideTicks: true,\n    scale: xScale,\n    top: yMax,\n    stroke: '#ffffff',\n    tickLabelProps: () => ({\n      fill: '#000000',\n      textAnchor: 'middle',\n      fontSize: 18,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#ffffff',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"descriptionHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Borough Breakdown\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"descWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Cumulative since the start of the outbreak\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 55\n    }\n  }), \"Age adjusted according to \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.cdc.gov/nchs/data/statnt/statnt20.pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 39\n    }\n  }, \"the US 2000 standard population\")))));\n};\n\nexport default Compb;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compb.js"],"names":["React","useEffect","useState","axios","Bar","Group","AxisBottom","AxisLeft","LinearGradient","scaleBand","scaleLinear","Compb","data","setData","a","get","res","dump","lines","replace","split","headers","i","length","obj","line","curLine","j","toLowerCase","push","x","d","borough_group","y","covid_case_count","width","height","xMax","yMax","xScale","rangeRound","domain","map","padding","yScale","Math","max","boro","barWidth","bandwidth","barHeight","barX","barY","parseFloat","parseInt","toPrecision","toLocaleString","fill","textAnchor","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Bar } from '@vx/shape'\nimport { Group } from '@vx/group'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { LinearGradient } from '@vx/gradient'\nimport { scaleBand, scaleLinear } from '@vx/scale'\n\nconst Compb = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv')\n      let res = await a.data\n\n      let \n        dump = [],\n        lines = res.replace('The ', '').split('\\r'),\n        headers = lines[0].split(',')\n    \n      for (let i = 1; i < lines.length; i++) {\n        let \n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n\n        if (curLine[0] === 'Citywide') continue\n    \n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j]\n        }\n    \n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n\n  const \n    x = d => d.borough_group,\n    y = d => d.covid_case_count,\n    width = 650,  \n    height = 400,\n    xMax = width,\n    yMax = height - 100\n\n  const xScale = scaleBand({\n    rangeRound: [0, xMax],\n    domain: data.map(x),\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    rangeRound: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))]\n  })\n\n  return (\n    <>\n      <div className=\"svgWrapper\">\n        <svg width={width} height={height}>\n        <LinearGradient \n            from=\"#fbc2eb\" \n            to=\"#ede1ed\" \n            id=\"gradient\"/>\n          <rect width={width} height={height} fill=\"url(#gradient)\" rx={14} />\n          <Group top={40}>\n            {data.map((d) => {\n              const \n                boro = x(d),\n                barWidth = xScale.bandwidth(),\n                barHeight = yMax - yScale(y(d)),\n                barX = xScale(boro),\n                barY = yMax - barHeight\n\n              return (\n                <Group>\n                  <Bar\n                    x={barX}\n                    y={barY}\n                    width={barWidth}\n                    height={barHeight}\n                    fill=\"#8996c9\"\n                    rx={10}\n                  />\n                  <text\n                    x={xScale(x(d))}\n                    y={yMax - barHeight}\n                    dx={\"5%\"}\n                    dy={\"-2%\"}\n                    textAnchor=\"middle\"\n                    fill=\"#53486b\"\n                    fontSize={15}\n                    fontFamily={\"Snoopy\"}\n                  >\n                    {parseFloat((parseInt(d.covid_case_count) / 1000)).toPrecision(3).toLocaleString()}%\n                  </text>\n                </Group>\n              )\n            })}\n\n            <AxisBottom\n              hideTicks={true}\n              scale={xScale}\n              top={yMax}\n              stroke={'#ffffff'}\n              tickLabelProps={() => ({\n                fill: '#000000',\n                textAnchor: 'middle',\n                fontSize: 18,\n                fontFamily: 'Snoopy'\n              })}\n              tickTextFill={'#ffffff'}\n            />\n          </Group>\n        </svg>\n      </div>\n      <div className=\"descDiv\">\n        <div className=\"headerWrap\">\n          <span className=\"descriptionHeader\">Borough Breakdown</span>\n        </div>\n        <div className=\"descWrap\">\n          <span className=\"description\">\n            Cumulative since the start of the outbreak<br />\n            Age adjusted according to <a href=\"https://www.cdc.gov/nchs/data/statnt/statnt20.pdf\">the US 2000 standard population</a>\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Compb\n"]},"metadata":{},"sourceType":"module"}