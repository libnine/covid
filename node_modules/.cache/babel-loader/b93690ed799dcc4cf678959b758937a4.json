{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compb.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from '@vx/shape';\nimport { Group } from '@vx/group';\nimport { AxisBottom, AxisLeft } from '@vx/axis';\nimport { GradientPurpleTeal } from '@vx/gradient';\nimport { scaleBand, scaleLinear } from '@vx/scale';\n\nfunction Compb() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', '').replace('The ', ''),\n            curLine = line.split(',');\n\n        if (curLine[0] === 'Citywide') {\n          continue;\n        }\n\n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j];\n        }\n\n        dump.push(obj);\n      }\n\n      setData(dump);\n    })();\n  }, []);\n\n  const x = d => d.borough_group,\n        y = d => d.covid_case_count,\n        height = window.innerHeight / 2,\n        width = window.innerWidth / 2,\n        xMax = width,\n        yMax = height - 100;\n\n  const xScale = scaleBand({\n    rangeRound: [0, xMax],\n    domain: data.map(x),\n    padding: 0.4\n  });\n  const yScale = scaleLinear({\n    rangeRound: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GradientPurpleTeal, {\n    id: \"purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: \"#fbc2eb\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Group, {\n    top: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, data.map(d => {\n    const boro = x(d),\n          barWidth = xScale.bandwidth(),\n          barHeight = yMax - yScale(y(d)),\n          barX = xScale(boro),\n          barY = yMax - barHeight;\n    return /*#__PURE__*/React.createElement(Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      x: barX,\n      y: barY,\n      width: barWidth,\n      height: barHeight,\n      fill: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      x: xScale(x(d)),\n      y: yMax - barHeight,\n      dx: \"5%\",\n      dy: \"-2%\",\n      textAnchor: \"middle\",\n      fill: \"\",\n      fontSize: 14,\n      fontFamily: \"Snoopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, d.covid_case_count));\n  }), /*#__PURE__*/React.createElement(AxisBottom, {\n    hideTicks: true,\n    scale: xScale,\n    top: yMax,\n    stroke: '#1b1a1e',\n    tickLabelProps: () => ({\n      fill: '#000000',\n      textAnchor: 'middle',\n      fontSize: 14,\n      fontFamily: 'Snoopy'\n    }),\n    tickTextFill: '#1b1a1e',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Compb;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compb.js"],"names":["React","useEffect","useState","axios","Bar","Group","AxisBottom","AxisLeft","GradientPurpleTeal","scaleBand","scaleLinear","Compb","data","setData","a","get","res","dump","lines","split","headers","i","length","obj","line","replace","curLine","j","toLowerCase","push","x","d","borough_group","y","covid_case_count","height","window","innerHeight","width","innerWidth","xMax","yMax","xScale","rangeRound","domain","map","padding","yScale","Math","max","boro","barWidth","bandwidth","barHeight","barX","barY","fill","textAnchor","fontSize","fontFamily"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,UAArC;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,WAAvC;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAW;AACV,UAAIa,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,8EAAV,CAAd;AACA,UAAIC,GAAG,GAAG,MAAMF,CAAC,CAACF,IAAlB;AAEA,UACEK,IAAI,GAAG,EADT;AAAA,UAEEC,KAAK,GAAGF,GAAG,CAACG,KAAJ,CAAU,IAAV,CAFV;AAAA,UAGEC,OAAO,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,CAHZ;;AAKA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YACEE,GAAG,GAAG,EADR;AAAA,YAEEC,IAAI,GAAGN,KAAK,CAACG,CAAD,CAAL,CAASI,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,EAA2BA,OAA3B,CAAmC,MAAnC,EAA2C,EAA3C,CAFT;AAAA,YAGEC,OAAO,GAAGF,IAAI,CAACL,KAAL,CAAW,GAAX,CAHZ;;AAKA,YAAIO,OAAO,CAAC,CAAD,CAAP,KAAe,UAAnB,EAA+B;AAAE;AAAU;;AAE3C,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACE,MAA5B,EAAoCK,CAAC,EAArC,EAAyC;AACvCJ,UAAAA,GAAG,CAACH,OAAO,CAACO,CAAD,CAAP,CAAWC,WAAX,EAAD,CAAH,GAAgCF,OAAO,CAACC,CAAD,CAAvC;AACD;;AAEDV,QAAAA,IAAI,CAACY,IAAL,CAAUN,GAAV;AACD;;AAEDV,MAAAA,OAAO,CAACI,IAAD,CAAP;AACD,KAzBD;AA0BD,GA3BQ,EA2BN,EA3BM,CAAT;;AA6BA,QACEa,CAAC,GAAGC,CAAC,IAAIA,CAAC,CAACC,aADb;AAAA,QAEEC,CAAC,GAAGF,CAAC,IAAIA,CAAC,CAACG,gBAFb;AAAA,QAGEC,MAAM,GAAGC,MAAM,CAACC,WAAP,GAAqB,CAHhC;AAAA,QAIEC,KAAK,GAAGF,MAAM,CAACG,UAAP,GAAoB,CAJ9B;AAAA,QAKEC,IAAI,GAAGF,KALT;AAAA,QAMEG,IAAI,GAAGN,MAAM,GAAG,GANlB;;AAQA,QAAMO,MAAM,GAAGjC,SAAS,CAAC;AACvBkC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAIH,IAAJ,CADW;AAEvBI,IAAAA,MAAM,EAAEhC,IAAI,CAACiC,GAAL,CAASf,CAAT,CAFe;AAGvBgB,IAAAA,OAAO,EAAE;AAHc,GAAD,CAAxB;AAMA,QAAMC,MAAM,GAAGrC,WAAW,CAAC;AACzBiC,IAAAA,UAAU,EAAE,CAACF,IAAD,EAAO,CAAP,CADa;AAEzBG,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAII,IAAI,CAACC,GAAL,CAAS,GAAGrC,IAAI,CAACiC,GAAL,CAASZ,CAAT,CAAZ,CAAJ;AAFiB,GAAD,CAA1B;AAKA,sBACE,uDACE;AAAK,IAAA,KAAK,EAAEK,KAAZ;AAAmB,IAAA,MAAM,EAAEH,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,EAAE,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,KAAK,EAAEG,KAAb;AAAoB,IAAA,MAAM,EAAEH,MAA5B;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAmD,IAAA,EAAE,EAAE,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,IAAI,CAACiC,GAAL,CAAUd,CAAD,IAAO;AACf,UACEmB,IAAI,GAAGpB,CAAC,CAACC,CAAD,CADV;AAAA,UAEEoB,QAAQ,GAAGT,MAAM,CAACU,SAAP,EAFb;AAAA,UAGEC,SAAS,GAAGZ,IAAI,GAAGM,MAAM,CAACd,CAAC,CAACF,CAAD,CAAF,CAH3B;AAAA,UAIEuB,IAAI,GAAGZ,MAAM,CAACQ,IAAD,CAJf;AAAA,UAKEK,IAAI,GAAGd,IAAI,GAAGY,SALhB;AAOA,wBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,CAAC,EAAEC,IADL;AAEE,MAAA,CAAC,EAAEC,IAFL;AAGE,MAAA,KAAK,EAAEJ,QAHT;AAIE,MAAA,MAAM,EAAEE,SAJV;AAKE,MAAA,IAAI,EAAC,SALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,CAAC,EAAEX,MAAM,CAACZ,CAAC,CAACC,CAAD,CAAF,CADX;AAEE,MAAA,CAAC,EAAEU,IAAI,GAAGY,SAFZ;AAGE,MAAA,EAAE,EAAE,IAHN;AAIE,MAAA,EAAE,EAAE,KAJN;AAKE,MAAA,UAAU,EAAC,QALb;AAME,MAAA,IAAI,EAAC,EANP;AAOE,MAAA,QAAQ,EAAE,EAPZ;AAQE,MAAA,UAAU,EAAE,QARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUCtB,CAAC,CAACG,gBAVH,CARF,CADF;AAuBD,GA/BA,CADH,eAkCE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAE,IADb;AAEE,IAAA,KAAK,EAAEQ,MAFT;AAGE,IAAA,GAAG,EAAED,IAHP;AAIE,IAAA,MAAM,EAAE,SAJV;AAKE,IAAA,cAAc,EAAE,OAAO;AACrBe,MAAAA,IAAI,EAAE,SADe;AAErBC,MAAAA,UAAU,EAAE,QAFS;AAGrBC,MAAAA,QAAQ,EAAE,EAHW;AAIrBC,MAAAA,UAAU,EAAE;AAJS,KAAP,CALlB;AAWE,IAAA,YAAY,EAAE,SAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CAHF,CADF,CADF;AAwDD;;AAED,eAAehD,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Bar } from '@vx/shape'\nimport { Group } from '@vx/group'\nimport { AxisBottom, AxisLeft } from '@vx/axis'\nimport { GradientPurpleTeal } from '@vx/gradient'\nimport { scaleBand, scaleLinear } from '@vx/scale'\n\nfunction Compb() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/boro.csv')\n      let res = await a.data\n\n      let \n        dump = [],\n        lines = res.split('\\r'),\n        headers = lines[0].split(',')\n    \n      for (let i = 1; i < lines.length; i++) {\n        let \n          obj = {},\n          line = lines[i].replace('\\n', '').replace('The ', ''),\n          curLine = line.split(',')\n\n        if (curLine[0] === 'Citywide') { continue }\n    \n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j]\n        }\n    \n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n\n  const \n    x = d => d.borough_group,\n    y = d => d.covid_case_count,\n    height = window.innerHeight / 2,\n    width = window.innerWidth / 2,\n    xMax = width,\n    yMax = height - 100\n\n  const xScale = scaleBand({\n    rangeRound: [0, xMax],\n    domain: data.map(x),\n    padding: 0.4\n  })\n\n  const yScale = scaleLinear({\n    rangeRound: [yMax, 0],\n    domain: [0, Math.max(...data.map(y))]\n  })\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        <GradientPurpleTeal id=\"purple\" />\n        <rect width={width} height={height} fill=\"#fbc2eb\" rx={14} />\n        <Group top={40}>\n          {data.map((d) => {\n            const \n              boro = x(d),\n              barWidth = xScale.bandwidth(),\n              barHeight = yMax - yScale(y(d)),\n              barX = xScale(boro),\n              barY = yMax - barHeight\n\n            return (\n              <Group>\n                <Bar\n                  x={barX}\n                  y={barY}\n                  width={barWidth}\n                  height={barHeight}\n                  fill=\"#ffffff\"\n                />\n                <text\n                  x={xScale(x(d))}\n                  y={yMax - barHeight}\n                  dx={\"5%\"}\n                  dy={\"-2%\"}\n                  textAnchor=\"middle\"\n                  fill=\"\"\n                  fontSize={14}\n                  fontFamily={\"Snoopy\"}\n                >\n                {d.covid_case_count}\n              </text>\n            </Group>\n            )\n          })}\n\n          <AxisBottom\n            hideTicks={true}\n            scale={xScale}\n            top={yMax}\n            stroke={'#1b1a1e'}\n            tickLabelProps={() => ({\n              fill: '#000000',\n              textAnchor: 'middle',\n              fontSize: 14,\n              fontFamily: 'Snoopy'\n            })}\n            tickTextFill={'#1b1a1e'}\n          />\n        </Group>\n      </svg>\n    </>\n  )\n}\n\nexport default Compb\n"]},"metadata":{},"sourceType":"module"}