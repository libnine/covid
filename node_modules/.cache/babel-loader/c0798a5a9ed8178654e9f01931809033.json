{"ast":null,"code":"import _toConsumableArray from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/qorka/Projects/covid/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import{Group}from'@vx/group';import{Circle}from'@vx/shape';import{LinearGradient}from'@vx/gradient';import{scaleLinear}from'@vx/scale';import{useTooltip,Tooltip}from'@vx/tooltip';var Compd=function Compd(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useTooltip=useTooltip(),tooltipData=_useTooltip.tooltipData,tooltipLeft=_useTooltip.tooltipLeft,tooltipTop=_useTooltip.tooltipTop,tooltipOpen=_useTooltip.tooltipOpen,showTooltip=_useTooltip.showTooltip,hideTooltip=_useTooltip.hideTooltip;useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var a,res,dump,lines,headers,i,obj,curLine,j;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv');case 2:a=_context.sent;_context.next=5;return a.data;case 5:res=_context.sent;dump=[],lines=res.replace(/\"/g,'').split('\\n'),headers=lines[0].replace(/\"/g,'').split(',');i=1;case 8:if(!(i<lines.length)){_context.next=17;break;}obj={},curLine=lines[i].split(',');if(!(parseInt(curLine[0])===99999||!parseInt(curLine[0]))){_context.next=12;break;}return _context.abrupt(\"continue\",14);case 12:for(j=0;j<headers.length;j++){obj[headers[j].toLowerCase().replace('.','_')]=curLine[j]||0;}dump.push(obj);case 14:i++;_context.next=8;break;case 17:setData(dump);case 18:case\"end\":return _context.stop();}}},_callee);}))();},[]);var tooltipTimeout;var total=function total(d){return d.total;},x=function x(d){return d.modzcta;},y=function y(d){return d.positive;};var width=650,height=400,xMax=width-40,yMax=height-40;var xScale=scaleLinear({domain:[Math.min.apply(Math,_toConsumableArray(data.map(x))),Math.max.apply(Math,_toConsumableArray(data.map(x)))],range:[0+40,xMax],padding:0.4,clamp:true});var yScale=scaleLinear({domain:[Math.min.apply(Math,_toConsumableArray(data.map(y))),Math.max.apply(Math,_toConsumableArray(data.map(y)))],range:[yMax,0],clamp:true});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"svgWrapper\"},/*#__PURE__*/React.createElement(\"svg\",{width:width,height:height},/*#__PURE__*/React.createElement(LinearGradient,{from:\"#fbc2eb\",to:\"#ede1ed\",id:\"gradient\"}),/*#__PURE__*/React.createElement(\"rect\",{width:width,height:height,fill:\"url('#gradient')\",rx:14}),/*#__PURE__*/React.createElement(Group,{top:40,onTouchStart:function onTouchStart(event){if(tooltipTimeout)clearTimeout(tooltipTimeout);hideTooltip();}},data.map(function(d,i){var cx=xScale(x(d));var cy=yScale(y(d));var r=total(d)/250*.75;return/*#__PURE__*/React.createElement(Circle,{className:\"dot\",cx:cx,cy:cy,r:r,fill:\"#ffffff\",stroke:\"#736ca3\",strokeWidth:2,onMouseEnter:function onMouseEnter(){if(tooltipTimeout)clearTimeout(tooltipTimeout);showTooltip({tooltipLeft:cx+window.screen.width/6.25,tooltipTop:cy+window.screen.height/3.25,tooltipData:d});},onMouseLeave:function onMouseLeave(){tooltipTimeout=setTimeout(function(){hideTooltip();},200);},onTouchStart:function onTouchStart(){if(tooltipTimeout)clearTimeout(tooltipTimeout);showTooltip({tooltipLeft:cx,tooltipTop:cy,tooltipData:d});}});}))),tooltipOpen&&/*#__PURE__*/React.createElement(Tooltip,{left:tooltipLeft,top:tooltipTop},/*#__PURE__*/React.createElement(\"div\",{className:\"ttStyle\"},/*#__PURE__*/React.createElement(\"strong\",null,\"Zip\"),\" \",x(tooltipData),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"strong\",null,\"Total\"),\" \",Number(total(tooltipData)).toLocaleString(),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"strong\",null,\"Positive\"),\" \",Number(y(tooltipData)).toLocaleString()))),/*#__PURE__*/React.createElement(\"div\",{className:\"descDiv\"},/*#__PURE__*/React.createElement(\"div\",{className:\"headerWrap\"},/*#__PURE__*/React.createElement(\"span\",{className:\"descriptionHeader\"},\"Zip Code Breakdown\")),/*#__PURE__*/React.createElement(\"div\",{className:\"descWrap\"},/*#__PURE__*/React.createElement(\"span\",{className:\"description\"},\"Includes the cumulative count of New York City residents by zip code of residence who were ever tested for COVID-19 (SARS-CoV-2) and tested positive.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"The cumulative counts are as of the date of extraction from the NYC Health Department's disease surveillance database.\"))));};export default Compd;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compd.js"],"names":["React","useState","useEffect","axios","Group","Circle","LinearGradient","scaleLinear","useTooltip","Tooltip","Compd","data","setData","tooltipData","tooltipLeft","tooltipTop","tooltipOpen","showTooltip","hideTooltip","get","a","res","dump","lines","replace","split","headers","i","length","obj","curLine","parseInt","j","toLowerCase","push","tooltipTimeout","total","d","x","modzcta","y","positive","width","height","xMax","yMax","xScale","domain","Math","min","map","max","range","padding","clamp","yScale","event","clearTimeout","cx","cy","r","window","screen","setTimeout","Number","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Group } from '@vx/group'\nimport { Circle } from '@vx/shape'\nimport { LinearGradient } from '@vx/gradient'\nimport { scaleLinear } from '@vx/scale'\nimport { useTooltip, Tooltip } from '@vx/tooltip'\n\nconst Compd = () => {\n  const [data, setData] = useState([])\n  const {\n    tooltipData,\n    tooltipLeft,\n    tooltipTop,\n    tooltipOpen,\n    showTooltip,\n    hideTooltip\n  } = useTooltip()\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace(/\"/g, '').split('\\n'),\n        headers = lines[0].replace(/\"/g, '').split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          curLine = lines[i].split(',')\n\n        if (parseInt(curLine[0]) === 99999 || !parseInt(curLine[0])) continue\n        \n        for (let j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase().replace('.', '_')] = curLine[j] || 0\n        }\n\n        dump.push(obj)\n      }\n\n      setData(dump)\n    })()\n  }, [])\n\n  let tooltipTimeout\n\n  const \n    total = d => d.total,\n    x = d => d.modzcta,\n    y = d => d.positive\n\n  const\n    width = 650,\n    height = 400,\n    xMax = width - 40,\n    yMax = height - 40\n\n  const xScale = scaleLinear({\n    domain: [Math.min(...data.map(x)), Math.max(...data.map(x))],\n    range: [0 + 40, xMax],\n    padding: 0.4,\n    clamp: true\n  })\n\n  const yScale = scaleLinear({\n    domain: [Math.min(...data.map(y)), Math.max(...data.map(y))],\n    range: [yMax, 0],\n    clamp: true\n  })\n\n  return (\n    <>\n      <div className=\"svgWrapper\">\n        <svg width={width} height={height}>\n          <LinearGradient \n              from=\"#fbc2eb\" \n              to=\"#ede1ed\" \n              id=\"gradient\"/>\n          <rect width={width} height={height} fill=\"url('#gradient')\" rx={14} />\n          <Group top={40}\n            onTouchStart={event => {\n              if (tooltipTimeout) clearTimeout(tooltipTimeout)\n              hideTooltip()\n            }}\n          >\n            {data.map((d, i) => {\n              const cx = xScale(x(d))\n              const cy = yScale(y(d))\n              const r = (total(d) / 250) * .75\n              return (\n                <Circle\n                  className=\"dot\"\n                  cx={cx}\n                  cy={cy}\n                  r={r}\n                  fill=\"#ffffff\"\n                  stroke=\"#736ca3\"\n                  strokeWidth={2}\n                  onMouseEnter={() => {\n                    if (tooltipTimeout) clearTimeout(tooltipTimeout)\n                    showTooltip({\n                      tooltipLeft: cx + ((window.screen.width) / 6.25) ,\n                      tooltipTop: cy + ((window.screen.height) / 3.25),\n                      tooltipData: d\n                    })\n                  }}\n                  onMouseLeave={() => {\n                    tooltipTimeout = setTimeout(() => {\n                      hideTooltip()\n                    }, 200)\n                  }}\n                  onTouchStart={() => {\n                    if (tooltipTimeout) clearTimeout(tooltipTimeout)\n                    showTooltip({\n                      tooltipLeft: cx,\n                      tooltipTop: cy,\n                      tooltipData: d\n                    })\n                  }}\n                />\n              )\n            })}\n          </Group>\n        </svg>\n        {tooltipOpen && (\n          <Tooltip left={tooltipLeft} top={tooltipTop}>\n            <div className=\"ttStyle\">\n              <strong>Zip</strong> {x(tooltipData)}<br />\n              <strong>Total</strong> {Number(total(tooltipData)).toLocaleString()}<br />\n              <strong>Positive</strong> {Number(y(tooltipData)).toLocaleString()}\n            </div>\n          </Tooltip>\n        )}\n      </div>\n      <div className=\"descDiv\">\n        <div className=\"headerWrap\">\n          <span className=\"descriptionHeader\">Zip Code Breakdown</span>\n        </div>\n        <div className=\"descWrap\">\n          <span className=\"description\">\n            Includes the cumulative count of New York City residents by zip code of residence who were ever tested for COVID-19 (SARS-CoV-2) and tested positive.<br /><br />\n            \n            The cumulative counts are as of the date of extraction from the NYC Health Department's disease surveillance database.\n          </span>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Compd\n"]},"metadata":{},"sourceType":"module"}