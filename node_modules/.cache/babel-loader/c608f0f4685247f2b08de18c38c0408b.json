{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/Area.js\";\nimport React from 'react';\nimport { AreaClosed, Line, Bar } from '@vx/shape';\nimport { appleStock } from '@vx/mock-data';\nimport { curveMonotoneX } from '@vx/curve';\nimport { GridRows, GridColumns } from '@vx/grid';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { withTooltip, Tooltip } from '@vx/tooltip';\nimport { localPoint } from '@vx/event';\nimport { bisector } from 'd3-array';\nimport { timeFormat } from 'd3-time-format';\nconst stock = appleStock.slice(800); // util\n\nconst formatDate = timeFormat(\"%b %d, '%y\");\n\nconst min = (arr, fn) => Math.min(...arr.map(fn));\n\nconst max = (arr, fn) => Math.max(...arr.map(fn));\n\nconst extent = (arr, fn) => [min(arr, fn), max(arr, fn)]; // accessors\n\n\nconst xStock = d => new Date(d.date);\n\nconst yStock = d => d.close;\n\nconst bisectDate = bisector(d => new Date(d.date)).left;\n\nclass Area extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTooltip = this.handleTooltip.bind(this);\n  }\n\n  handleTooltip({\n    event,\n    data,\n    xStock,\n    xScale,\n    yScale\n  }) {\n    const {\n      showTooltip\n    } = this.props;\n    const {\n      x\n    } = localPoint(event);\n    const x0 = xScale.invert(x);\n    const index = bisectDate(data, x0, 1);\n    const d0 = data[index - 1];\n    const d1 = data[index];\n    let d = d0;\n\n    if (d1 && d1.date) {\n      d = x0 - xStock(d0.date) > xStock(d1.date) - x0 ? d1 : d0;\n    }\n\n    showTooltip({\n      tooltipData: d,\n      tooltipLeft: x,\n      tooltipTop: yScale(d.close)\n    });\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      margin,\n      hideTooltip,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      events\n    } = this.props;\n    if (width < 10) return null; // bounds\n\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom; // scales\n\n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(stock, xStock)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      ref: s => this.svg = s,\n      width: width,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      fill: \"#32deaa\",\n      rx: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"defs\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n      id: \"gradient\",\n      x1: \"0%\",\n      y1: \"0%\",\n      x2: \"0%\",\n      y2: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"0%\",\n      stopColor: \"#FFFFFF\",\n      stopOpacity: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"#FFFFFF\",\n      stopOpacity: 0.2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(GridRows, {\n      lineStyle: {\n        pointerEvents: 'none'\n      },\n      scale: yScale,\n      width: xMax,\n      strokeDasharray: \"2,2\",\n      stroke: \"rgba(255,255,255,0.3)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(GridColumns, {\n      lineStyle: {\n        pointerEvents: 'none'\n      },\n      scale: xScale,\n      height: yMax,\n      strokeDasharray: \"2,2\",\n      stroke: \"rgba(255,255,255,0.3)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AreaClosed, {\n      data: stock,\n      x: d => xScale(xStock(d)),\n      y: d => yScale(yStock(d)),\n      yScale: yScale,\n      strokeWidth: 1,\n      stroke: 'url(#gradient)',\n      fill: 'url(#gradient)',\n      curve: curveMonotoneX,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      fill: \"transparent\",\n      rx: 14,\n      data: stock,\n      onTouchStart: event => this.handleTooltip({\n        event,\n        xStock,\n        xScale,\n        yScale,\n        data: stock\n      }),\n      onTouchMove: event => this.handleTooltip({\n        event,\n        xStock,\n        xScale,\n        yScale,\n        data: stock\n      }),\n      onMouseMove: event => this.handleTooltip({\n        event,\n        xStock,\n        xScale,\n        yScale,\n        data: stock\n      }),\n      onMouseLeave: event => hideTooltip(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), tooltipData && /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      from: {\n        x: tooltipLeft,\n        y: 0\n      },\n      to: {\n        x: tooltipLeft,\n        y: yMax\n      },\n      stroke: \"rgba(92, 119, 235, 1.000)\",\n      strokeWidth: 2,\n      style: {\n        pointerEvents: 'none'\n      },\n      strokeDasharray: \"2,2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"circle\", {\n      cx: tooltipLeft,\n      cy: tooltipTop + 1,\n      r: 4,\n      fill: \"black\",\n      fillOpacity: 0.1,\n      stroke: \"black\",\n      strokeOpacity: 0.1,\n      strokeWidth: 2,\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"circle\", {\n      cx: tooltipLeft,\n      cy: tooltipTop,\n      r: 4,\n      fill: \"rgba(92, 119, 235, 1.000)\",\n      stroke: \"white\",\n      strokeWidth: 2,\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }))), tooltipData && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      top: tooltipTop - 12,\n      left: tooltipLeft + 12,\n      style: {\n        backgroundColor: 'rgba(92, 119, 235, 1.000)',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, `$${yStock(tooltipData)}`), /*#__PURE__*/React.createElement(Tooltip, {\n      top: yMax - 14,\n      left: tooltipLeft,\n      style: {\n        transform: 'translateX(-50%)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, formatDate(xStock(tooltipData)))));\n  }\n\n}\n\nexport default withTooltip(Area);","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/Area.js"],"names":["React","AreaClosed","Line","Bar","appleStock","curveMonotoneX","GridRows","GridColumns","scaleTime","scaleLinear","withTooltip","Tooltip","localPoint","bisector","timeFormat","stock","slice","formatDate","min","arr","fn","Math","map","max","extent","xStock","d","Date","date","yStock","close","bisectDate","left","Area","Component","constructor","props","handleTooltip","bind","event","data","xScale","yScale","showTooltip","x","x0","invert","index","d0","d1","tooltipData","tooltipLeft","tooltipTop","render","width","height","margin","hideTooltip","events","xMax","right","yMax","top","bottom","range","domain","nice","s","svg","pointerEvents","y","backgroundColor","color","transform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AreaClosed, Line, Bar } from '@vx/shape';\nimport { appleStock } from '@vx/mock-data';\nimport { curveMonotoneX } from '@vx/curve';\nimport { GridRows, GridColumns } from '@vx/grid';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { withTooltip, Tooltip } from '@vx/tooltip';\nimport { localPoint } from '@vx/event';\nimport { bisector } from 'd3-array';\nimport { timeFormat } from 'd3-time-format';\n\nconst stock = appleStock.slice(800);\n\n// util\nconst formatDate = timeFormat(\"%b %d, '%y\");\nconst min = (arr, fn) => Math.min(...arr.map(fn));\nconst max = (arr, fn) => Math.max(...arr.map(fn));\nconst extent = (arr, fn) => [min(arr, fn), max(arr, fn)];\n\n// accessors\nconst xStock = d => new Date(d.date);\nconst yStock = d => d.close;\nconst bisectDate = bisector(d => new Date(d.date)).left;\n\nclass Area extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTooltip = this.handleTooltip.bind(this);\n  }\n  handleTooltip({ event, data, xStock, xScale, yScale }) {\n    const { showTooltip } = this.props;\n    const { x } = localPoint(event);\n    const x0 = xScale.invert(x);\n    const index = bisectDate(data, x0, 1);\n    const d0 = data[index - 1];\n    const d1 = data[index];\n    let d = d0;\n    if (d1 && d1.date) {\n      d = x0 - xStock(d0.date) > xStock(d1.date) - x0 ? d1 : d0;\n    }\n    showTooltip({\n      tooltipData: d,\n      tooltipLeft: x,\n      tooltipTop: yScale(d.close)\n    });\n  }\n  render() {\n    const {\n      width,\n      height,\n      margin,\n      hideTooltip,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      events\n    } = this.props;\n    if (width < 10) return null;\n\n    // bounds\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    // scales\n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(stock, xStock)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(stock, yStock) + yMax / 3],\n      nice: true\n    });\n\n    return (\n      <div>\n        <svg ref={s => (this.svg = s)} width={width} height={height}>\n          <rect x={0} y={0} width={width} height={height} fill=\"#32deaa\" rx={14} />\n          <defs>\n            <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n              <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n            </linearGradient>\n          </defs>\n          <GridRows\n            lineStyle={{ pointerEvents: 'none' }}\n            scale={yScale}\n            width={xMax}\n            strokeDasharray=\"2,2\"\n            stroke=\"rgba(255,255,255,0.3)\"\n          />\n          <GridColumns\n            lineStyle={{ pointerEvents: 'none' }}\n            scale={xScale}\n            height={yMax}\n            strokeDasharray=\"2,2\"\n            stroke=\"rgba(255,255,255,0.3)\"\n          />\n          <AreaClosed\n            data={stock}\n            x={d => xScale(xStock(d))}\n            y={d => yScale(yStock(d))}\n            yScale={yScale}\n            strokeWidth={1}\n            stroke={'url(#gradient)'}\n            fill={'url(#gradient)'}\n            curve={curveMonotoneX}\n          />\n          <Bar\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            fill=\"transparent\"\n            rx={14}\n            data={stock}\n            onTouchStart={event =>\n              this.handleTooltip({\n                event,\n                xStock,\n                xScale,\n                yScale,\n                data: stock\n              })\n            }\n            onTouchMove={event =>\n              this.handleTooltip({\n                event,\n                xStock,\n                xScale,\n                yScale,\n                data: stock\n              })\n            }\n            onMouseMove={event =>\n              this.handleTooltip({\n                event,\n                xStock,\n                xScale,\n                yScale,\n                data: stock\n              })\n            }\n            onMouseLeave={event => hideTooltip()}\n          />\n          {tooltipData && (\n            <g>\n              <Line\n                from={{ x: tooltipLeft, y: 0 }}\n                to={{ x: tooltipLeft, y: yMax }}\n                stroke=\"rgba(92, 119, 235, 1.000)\"\n                strokeWidth={2}\n                style={{ pointerEvents: 'none' }}\n                strokeDasharray=\"2,2\"\n              />\n              <circle\n                cx={tooltipLeft}\n                cy={tooltipTop + 1}\n                r={4}\n                fill=\"black\"\n                fillOpacity={0.1}\n                stroke=\"black\"\n                strokeOpacity={0.1}\n                strokeWidth={2}\n                style={{ pointerEvents: 'none' }}\n              />\n              <circle\n                cx={tooltipLeft}\n                cy={tooltipTop}\n                r={4}\n                fill=\"rgba(92, 119, 235, 1.000)\"\n                stroke=\"white\"\n                strokeWidth={2}\n                style={{ pointerEvents: 'none' }}\n              />\n            </g>\n          )}\n        </svg>\n        {tooltipData && (\n          <div>\n            <Tooltip\n              top={tooltipTop - 12}\n              left={tooltipLeft + 12}\n              style={{\n                backgroundColor: 'rgba(92, 119, 235, 1.000)',\n                color: 'white'\n              }}\n            >\n              {`$${yStock(tooltipData)}`}\n            </Tooltip>\n            <Tooltip\n              top={yMax - 14}\n              left={tooltipLeft}\n              style={{\n                transform: 'translateX(-50%)'\n              }}\n            >\n              {formatDate(xStock(tooltipData))}\n            </Tooltip>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withTooltip(Area);"]},"metadata":{},"sourceType":"module"}