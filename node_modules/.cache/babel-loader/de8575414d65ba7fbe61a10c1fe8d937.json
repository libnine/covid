{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/states.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { extent, scaleLinear, select, axisBottom } from 'd3';\nimport axios from 'axios';\n\nfunction States() {\n  const [dump, dFunc] = useState(),\n        [xScale, xFunc] = useState(),\n        [yScale, yFunc] = useState(),\n        ref = useRef(null),\n        g = select(ref.current),\n        w = 600,\n        h = 600,\n        margin = {\n    top: 40,\n    right: 40,\n    bottom: 40,\n    left: 40\n  },\n        height = h - margin.top - margin.bottom,\n        width = w - margin.right - margin.left;\n  const xAxis = axisBottom();\n\n  async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json');\n    let res = await a.data[\"bpi\"];\n    return Object.keys(res).map(key => {\n      return {\n        x: key,\n        y: res[key]\n      };\n    });\n  }\n\n  async function scaleFunc(data) {\n    let x = scaleTime().domain(extent(data, d => d.x)).range([0, width]);\n    let y = scaleLinear().domain(extent(data, d => d.y)).range([height - margin.bottom, margin.top]);\n    return {\n      x,\n      y\n    };\n  }\n\n  useEffect(() => {\n    try {\n      dMapped().then(ret => {\n        dFunc(ret);\n        scaleFunc(ret).then((x, y) => {\n          xFunc(x);\n          yFunc(y);\n        });\n      });\n    } catch (e) {\n      throw e;\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, JSON.stringify(dump)));\n}\n\nexport default States;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/states.js"],"names":["React","useEffect","useRef","useState","extent","scaleLinear","select","axisBottom","axios","States","dump","dFunc","xScale","xFunc","yScale","yFunc","ref","g","current","w","h","margin","top","right","bottom","left","height","width","xAxis","dMapped","a","get","res","data","Object","keys","map","key","x","y","scaleFunc","scaleTime","domain","d","range","then","ret","e","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { extent, scaleLinear, select, axisBottom } from 'd3'\nimport axios from 'axios'\n\nfunction States() {\n  const \n    [dump, dFunc] = useState(),\n    [xScale, xFunc] = useState(),\n    [yScale, yFunc] = useState(),\n    ref = useRef(null),\n    g = select(ref.current),\n    w = 600, \n    h = 600,\n    margin = { top: 40, right: 40, bottom: 40, left: 40 },\n    height = h - margin.top - margin.bottom,\n    width = w - margin.right - margin.left\n\n  const \n    xAxis = axisBottom()\n\n  async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json')\n    let res = await a.data[\"bpi\"]\n    return Object.keys(res).map((key) => {\n          return {\n            x: key,\n            y: res[key]\n          }\n      })\n  }\n\n  async function scaleFunc(data) {\n    let x = scaleTime()\n        .domain(extent(data, d => d.x))\n        .range([0, width])\n\n    let y = scaleLinear()\n      .domain(extent(data, d => d.y))\n      .range([height - margin.bottom, margin.top])\n\n    return { x, y }\n  }\n\n  useEffect(() => {\n    try {\n      dMapped()\n        .then((ret) => \n        {\n          dFunc(ret)\n          \n          scaleFunc(ret)\n            .then((x, y) => { \n              xFunc(x)\n              yFunc(y)\n            })\n        })\n    }\n    \n    catch(e) { \n      throw(e) \n    } \n  }, [])\n\n  return (\n    <React.Fragment>\n      {/* <svg width={w} height={h}>\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n        </g>\n      </svg> */}\n      <h1>{JSON.stringify(dump)}</h1>\n    </React.Fragment>\n  )\n}\n\nexport default States\n"]},"metadata":{},"sourceType":"module"}