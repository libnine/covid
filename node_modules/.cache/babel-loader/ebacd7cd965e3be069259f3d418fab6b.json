{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/compa.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Group } from '@vx/group';\nimport { LinePath } from '@vx/shape';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { LinearGradient } from '@vx/gradient';\nimport { extent, max } from 'd3-array';\n\nfunction Compa() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    (async () => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv');\n      let res = await a.data;\n      let dump = [],\n          lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n          headers = lines[0].split(',');\n\n      for (let i = 1; i < lines.length; i++) {\n        let obj = {},\n            line = lines[i].replace('\\n', ''),\n            curLine = line.split(',');\n\n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j];\n        }\n\n        dump.push(obj);\n      }\n\n      console.log(dump);\n      setData(dump);\n    })();\n  }, []);\n  const width = window.innerWidth / 2;\n  const height = window.innerHeight / 2;\n\n  const x = d => new Date(d.date);\n\n  const y = d => d.close;\n\n  const margin = {\n    top: 60,\n    bottom: 60,\n    left: 80,\n    right: 80\n  };\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n  const xScale = scaleTime({\n    range: [0, xMax],\n    domain: extent(data, x)\n  });\n  const yScale = scaleLinear({\n    range: [yMax, 0],\n    domain: [0, max(data, y)]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinearGradient, {\n    from: \"#fbc2eb\",\n    to: \"#a6c1ee\",\n    id: \"gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#fbc2eb\",\n    rx: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), xMax > 8 && data.map((d, i) => {\n    return /*#__PURE__*/React.createElement(Group, {\n      key: `lines-${i}`,\n      top: i * yMax / 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LinePath, {\n      data: d,\n      x: d => xScale(x(d)),\n      y: d => yScale(y(d)),\n      stroke: '#ffffff',\n      strokeWidth: 1,\n      curve: i % 2 == 0 ? curveMonotoneX : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }));\n  })));\n}\n\nexport default Compa;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/compa.js"],"names":["React","useEffect","useState","axios","Group","LinePath","scaleTime","scaleLinear","AxisLeft","AxisBottom","LinearGradient","extent","max","Compa","data","setData","a","get","res","dump","lines","replace","split","headers","i","length","obj","line","curLine","j","toLowerCase","push","console","log","width","window","innerWidth","height","innerHeight","x","d","Date","date","y","close","margin","top","bottom","left","right","xMax","yMax","xScale","range","domain","yScale","map","curveMonotoneX","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Group } from '@vx/group'\nimport { LinePath } from '@vx/shape'\nimport { scaleTime, scaleLinear } from '@vx/scale'\nimport { AxisLeft, AxisBottom } from '@vx/axis'\nimport { LinearGradient } from '@vx/gradient'\nimport { extent, max } from 'd3-array'\n\nfunction Compa() {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    (async() => {\n      let a = await axios.get('https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv')\n      let res = await a.data\n  \n      let \n        dump = [],\n        lines = res.replace('DATE_OF_INTEREST', 'date').split('\\r'),\n        headers = lines[0].split(',')\n\n      for (let i = 1; i < lines.length; i++) {\n        let\n          obj = {},\n          line = lines[i].replace('\\n', ''),\n          curLine = line.split(',')\n    \n        for (var j = 0; j < headers.length; j++) {\n          obj[headers[j].toLowerCase()] = curLine[j]\n        }\n    \n        dump.push(obj)\n      }\n\n      console.log(dump)\n\n      setData(dump)\n    })()\n  }, [])\n  \n  const width = window.innerWidth / 2\n  const height = window.innerHeight / 2\n\n  const x = d => new Date(d.date)\n  const y = d => d.close\n\n  const margin = {\n    top: 60,\n    bottom: 60,\n    left: 80,\n    right: 80,\n  }\n\n  const xMax = width - margin.left - margin.right\n  const yMax = height - margin.top - margin.bottom\n\n  const xScale = scaleTime({\n    range: [0, xMax],\n    domain: extent(data, x)\n  })\n\n  const yScale = scaleLinear({\n    range: [yMax, 0],\n    domain: [0, max(data, y)],\n  })\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        <LinearGradient\n          from='#fbc2eb'\n          to='#a6c1ee'\n          id='gradient'\n        />   \n        <rect x={0} y={0} width={width} height={height} fill=\"#fbc2eb\" rx={14} />\n        {xMax > 8 &&\n          data.map((d, i) => {\n            return (\n              <Group key={`lines-${i}`} top={i * yMax / 2}>\n                <LinePath\n                  data={d}\n                  x={d => xScale(x(d))}\n                  y={d => yScale(y(d))}\n                  stroke={'#ffffff'}\n                  strokeWidth={1}\n                  curve={i % 2 == 0 ? curveMonotoneX : undefined}\n                />\n              </Group>\n            )\n          })}\n      </svg>\n    </>\n    \n  )\n}\n\nexport default Compa\n"]},"metadata":{},"sourceType":"module"}