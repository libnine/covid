{"ast":null,"code":"var _jsxFileName = \"/Users/qorka/Projects/covid/ui/src/components/states.js\";\nimport React, { useEffect, useState } from 'react';\nimport { extent, max } from 'd3-array';\nimport { scaleLinear, scaleTime } from '@vx/scale';\nimport { LinePath } from '@vx/shape';\nimport axios from 'axios';\n\nfunction States() {\n  const [dump, dFunc] = useState(),\n        [xScale, xFunc] = useState(),\n        [yScale, yFunc] = useState();\n\n  const width = window.innerWidth / 3,\n        height = window.innerHeight / 2,\n        padding = 100,\n        xSelector = d => async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json');\n    let res = await a.data[\"bpi\"];\n    return Object.keys(res).map(key => {\n      return {\n        x: key,\n        y: res[key]\n      };\n    });\n  };\n\n  async function scaleFunc(data) {\n    let x = scaleTime({\n      domain: extent(data, d => new Date(d.x)),\n      range: [padding, width - padding]\n    });\n    let y = scaleLinear({\n      domain: [0, max(data, d => d.y) + max(data, d => d.y) / 3],\n      range: [height - padding, padding]\n    });\n    return {\n      x,\n      y\n    };\n  }\n\n  useEffect(() => {\n    try {\n      dMapped().then(ret => {\n        dFunc(ret);\n        scaleFunc(ret).then((x, y) => {\n          xFunc(x);\n          yFunc(y);\n        });\n      });\n    } catch (e) {\n      throw e;\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height,\n    fill: \"#b57edc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LinePath, {\n    data: dump,\n    xScale: xScale,\n    yScale: yScale,\n    x: d => new Date(d.x),\n    y: d => d.y,\n    strokeWidth: 5,\n    stroke: \"#ffffff\",\n    strokeLinecap: \"round\",\n    fill: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, JSON.stringify(dump)));\n}\n\nexport default States;","map":{"version":3,"sources":["/Users/qorka/Projects/covid/ui/src/components/states.js"],"names":["React","useEffect","useState","extent","max","scaleLinear","scaleTime","LinePath","axios","States","dump","dFunc","xScale","xFunc","yScale","yFunc","width","window","innerWidth","height","innerHeight","padding","xSelector","d","dMapped","a","get","res","data","Object","keys","map","key","x","y","scaleFunc","domain","Date","range","then","ret","e","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { extent, max } from 'd3-array'\nimport { scaleLinear, scaleTime } from '@vx/scale'\nimport { LinePath } from '@vx/shape'\nimport axios from 'axios'\n\nfunction States() {\n  const \n    [dump, dFunc] = useState(),\n    [xScale, xFunc] = useState(),\n    [yScale, yFunc] = useState()\n\n  const\n    width = window.innerWidth / 3, \n    height = window.innerHeight / 2,\n    padding = 100,\n    xSelector = d => \n\n  async function dMapped() {\n    let a = await axios.get('https://api.coindesk.com/v1/bpi/historical/close.json')\n    let res = await a.data[\"bpi\"]\n    return Object.keys(res).map((key) => {\n          return {\n            x: key,\n            y: res[key]\n          }\n      })\n  }\n\n  async function scaleFunc(data) {\n    let x = scaleTime({\n      domain: extent(data, d => new Date(d.x)),\n      range: [padding, width - padding]\n    })\n\n    let y = scaleLinear({\n      domain: [0, max(data, d => d.y) + ((max(data, d => d.y) / 3))],\n      range: [height - padding, padding]\n    })\n\n    return { x, y }\n  }\n\n  useEffect(() => {\n    try {\n      dMapped()\n        .then((ret) => {\n          dFunc(ret)\n          \n          scaleFunc(ret)\n            .then((x, y) => { \n              xFunc(x)\n              yFunc(y)\n            })\n        })\n    }\n    \n    catch(e) { \n      throw(e)\n    }\n  }, [])\n\n  return (\n    <>\n      <svg width={width} height={height}>\n        <rect x={0} y={0} width={width} height={height} fill=\"#b57edc\" />\n        <LinePath\n          data={dump}\n          xScale={xScale}\n          yScale={yScale}\n          x={d => new Date(d.x)}\n          y={d => d.y}\n          strokeWidth={5}\n          stroke=\"#ffffff\"\n          strokeLinecap=\"round\"\n          fill=\"transparent\"\n        />\n      </svg>\n    <h1>{JSON.stringify(dump)}</h1>\n    </>\n  )\n}\n\nexport default States\n"]},"metadata":{},"sourceType":"module"}