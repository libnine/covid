"use strict";

exports.__esModule = true;
exports.default = Tooltip;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Tooltip(_ref) {
  var className = _ref.className,
      top = _ref.top,
      left = _ref.left,
      style = _ref.style,
      children = _ref.children,
      restProps = _objectWithoutPropertiesLoose(_ref, ["className", "top", "left", "style", "children"]);

  return _react.default.createElement("div", _extends({
    className: (0, _classnames.default)('vx-tooltip-portal', className),
    style: _extends({
      position: 'absolute',
      backgroundColor: 'white',
      color: '#666666',
      padding: '.3rem .5rem',
      borderRadius: '3px',
      fontSize: '14px',
      boxShadow: '0 1px 2px rgba(33,33,33,0.2)',
      lineHeight: '1em',
      pointerEvents: 'none',
      top: top,
      left: left
    }, style)
  }, restProps), children);
}

Tooltip.propTypes = {
  left: _propTypes.default.number,
  top: _propTypes.default.number,
  className: _propTypes.default.string,
  children: _propTypes.default.node
};